{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/XGEN_AI/src/app/%28dashboard%29/exam/page.jsx"],"sourcesContent":["\"use client\"\nimport { useState, useEffect } from 'react';\nimport {\n  FileUp,\n  FileQuestion,\n  Loader2,\n  BarChart3,\n  PieChart as PieChartIcon,\n  AlertCircle,\n  ArrowLeft,\n  Download,\n  AlertTriangle,\n  CheckCircle2,\n  Brain\n} from 'lucide-react';\nimport axios from 'axios';\nimport {\n  Legend,\n  PieChart, Pie, Cell,\n  BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer,\n  RadarChart, Radar, PolarGrid, PolarAngleAxis, PolarRadiusAxis\n} from 'recharts';\n\nexport default function ExamAnalyzer() {\n  const [file, setFile] = useState(null);\n  const [analysis, setAnalysis] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [dragActive, setDragActive] = useState(false);\n  const [showAnimation, setShowAnimation] = useState(true);\n  const [activeTab, setActiveTab] = useState('overview');\n\n  useEffect(() => {\n    // Show entry animation\n    const timer = setTimeout(() => {\n      setShowAnimation(false);\n    }, 1500);\n   \n    return () => clearTimeout(timer);\n  }, []);\n\n  // Handle file drop\n  const handleDrag = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n   \n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      setDragActive(true);\n    } else if (e.type === \"dragleave\") {\n      setDragActive(false);\n    }\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n   \n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      setFile(e.dataTransfer.files[0]);\n      setAnalysis(null);\n    }\n  };\n\n  const handleFileChange = (e) => {\n    if (e.target.files && e.target.files[0]) {\n      setFile(e.target.files[0]);\n      setAnalysis(null);\n    }\n  };\n\n  const handleAnalyze = async () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n\n    setLoading(true);\n    setUploadProgress(0);\n   \n    try {\n      const res = await axios.post('http://127.0.0.1:5000/api/analyze-exam', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n        onUploadProgress: (progressEvent) => {\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n          setUploadProgress(percentCompleted);\n        }\n      });\n      setAnalysis(res.data);\n      setActiveTab('overview');\n    } catch (error) {\n      alert(error.response?.data?.error || 'Failed to analyze exam');\n    }\n    setLoading(false);\n  };\n\n  // Data processing functions\n  const bloomData = () => {\n    if (!analysis) return [];\n    const counts = {};\n    analysis.questions.forEach(q => {\n      counts[q['Bloom Level']] = (counts[q['Bloom Level']] || 0) + 1;\n    });\n    return Object.keys(counts).map(key => ({ name: key, value: counts[key] }));\n  };\n\n  const topicData = () => {\n    if (!analysis) return [];\n    const counts = {};\n    analysis.questions.forEach(q => {\n      counts[q['Topic']] = (counts[q['Topic']] || 0) + 1;\n    });\n    return Object.keys(counts).map(key => ({ name: key, value: counts[key] }));\n  };\n\n  const pointData = () => {\n    if (!analysis) return [];\n    return analysis.questions.map(q => ({\n      name: q['Question Number'],\n      points: q['Final Points']\n    }));\n  };\n\n  const difficultyData = () => {\n    if (!analysis) return [];\n   \n    // Calculate counts of each difficulty level\n    const levels = ['Easy', 'Medium', 'Hard'];\n    const counts = {\n      'Easy': 0,\n      'Medium': 0,\n      'Hard': 0\n    };\n   \n    analysis.questions.forEach(q => {\n      // Assuming question has difficulty level; you might need to derive this from Bloom level\n      const difficulty = q['Difficulty'] || 'Medium'; // Default to Medium if not specified\n      counts[difficulty] = (counts[difficulty] || 0) + 1;\n    });\n   \n    return levels.map(level => ({\n      subject: level,\n      A: counts[level],\n      fullMark: analysis.questions.length\n    }));\n  };\n\n  // Calculate overall exam quality score (example metric)\n  const calculateQualityScore = () => {\n    if (!analysis) return 0;\n   \n    // This is a simplified example. You could create a more sophisticated scoring system\n    const bloomLevels = bloomData();\n    const topics = topicData();\n   \n    // Score based on bloom taxonomy distribution (better if higher levels are included)\n    const hasHigherOrderThinking = bloomLevels.some(item =>\n      ['Analysis', 'Synthesis', 'Evaluation', 'Creating', 'Evaluating', 'Analyzing'].includes(item.name)\n    );\n   \n    // Score based on topic coverage (better if more topics)\n    const topicCoverageScore = Math.min(topics.length * 10, 50);\n   \n    // Score based on question quality (using recommendations as a proxy)\n    const recommendationScore = analysis.questions.reduce((score, q) => {\n      // If recommendation suggests improvements, reduce score slightly\n      return score - (q['Recommendation'].includes('improve') ? 5 : 0);\n    }, 50);\n   \n    const totalScore = (hasHigherOrderThinking ? 30 : 0) + topicCoverageScore + recommendationScore;\n    return Math.min(Math.max(totalScore, 0), 100);\n  };\n\n  // UI color constants\n  const COLORS = ['#3b82f6', '#dc2626', '#10b981', '#f59e0b', '#8b5cf6', '#ef4444'];\n  const qualityScore = calculateQualityScore();\n  const qualityColor =\n    qualityScore >= 80 ? 'text-emerald-500' :\n    qualityScore >= 60 ? 'text-amber-500' : 'text-rose-500';\n\n  // Get suggested improvements count\n  const getSuggestionsCount = () => {\n    if (!analysis) return 0;\n    return analysis.questions.filter(q =>\n      q['Recommendation'] && q['Recommendation'].trim() !== '' &&\n      !q['Recommendation'].toLowerCase().includes('excellent')\n    ).length;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 text-slate-800\">\n      {/* Animated intro - only shows on first load */}\n      {showAnimation && (\n        <div className=\"fixed inset-0 flex items-center justify-center bg-white z-50\">\n          <div className=\"text-center\">\n            <Brain size={64} className=\"mx-auto text-red-600 animate-pulse\" />\n            <h1 className=\"mt-4 text-3xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-red-500 to-red-600\">\n              Exam Analyzer AI\n            </h1>\n          </div>\n        </div>\n      )}\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        <header className=\"text-center mb-12\">\n          <h1 className=\"text-4xl font-extrabold tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-red-600 to-red-600\">\n            AI Exam Analyzer\n          </h1>\n          <p className=\"mt-2 text-lg text-slate-600\">Upload your exam document for AI-powered insights and recommendations</p>\n        </header>\n\n        {!analysis && !loading && (\n          <div\n            className={`max-w-2xl mx-auto bg-white rounded-2xl shadow-xl overflow-hidden transition-all duration-300 ${dragActive ? 'ring-2 ring-red-500 shadow-red-100' : ''}`}\n            onDragEnter={handleDrag}\n            onDragLeave={handleDrag}\n            onDragOver={handleDrag}\n            onDrop={handleDrop}\n          >\n            <div className=\"p-8\">\n              <div className=\"text-center mb-8\">\n                <div className=\"bg-red-50 rounded-full p-4 inline-flex\">\n                  <FileQuestion size={40} className=\"text-red-600\" />\n                </div>\n                <h2 className=\"text-2xl font-bold mt-4 text-slate-800\">Upload Your Exam</h2>\n                <p className=\"text-slate-500 mt-2\">Analyze bloom taxonomy, difficulty, and get improvement suggestions</p>\n              </div>\n             \n              <div className=\"flex flex-col items-center\">\n                <label className={`cursor-pointer border-2 border-dashed ${dragActive ? 'border-red-500 bg-red-50' : 'border-slate-300 bg-slate-50'} rounded-xl px-6 py-10 w-full text-center transition-all duration-200 hover:bg-slate-100 hover:border-slate-400`}>\n                  <FileUp className=\"mx-auto text-slate-400 mb-4\" size={32} />\n                  <span className=\"text-sm text-slate-500 block mb-2\">Drag and drop your file here or click to browse</span>\n                  <span className=\"text-xs text-slate-400\">Supported formats: PDF, DOCX</span>\n                  {file && (\n                    <div className=\"mt-4 py-2 px-3 bg-red-50 rounded-lg inline-flex items-center\">\n                      <FileUp size={16} className=\"text-red-500 mr-2\" />\n                      <span className=\"text-sm font-medium text-red-700\">{file.name}</span>\n                    </div>\n                  )}\n                  <input type=\"file\" accept=\".pdf,.docx\" onChange={handleFileChange} className=\"hidden\" />\n                </label>\n               \n                <button\n                  onClick={handleAnalyze}\n                  disabled={!file}\n                  className={`mt-8 px-8 py-3 rounded-xl font-medium shadow-lg transition-all duration-300 ${\n                    file\n                      ? 'bg-gradient-to-r from-red-600 to-red-400 text-white hover:shadow-red-200 hover:translate-y-[-2px]'\n                      : 'bg-slate-200 text-slate-400 cursor-not-allowed'\n                  }`}\n                >\n                  Analyze Exam\n                </button>\n              </div>\n            </div>\n           \n            <div className=\"bg-gradient-to-r from-red-600 to-red-400 px-8 py-4 text-white\">\n              <h3 className=\"font-medium mb-2 flex items-center\">\n                <Brain size={18} className=\"mr-2\" />\n                AI-Powered Analysis\n              </h3>\n              <p className=\"text-red-100 text-sm\">Our AI examines question structure, bloom taxonomy levels, and provides actionable suggestions for improvement.</p>\n            </div>\n          </div>\n        )}\n\n        {loading && (\n          <div className=\"max-w-md mx-auto bg-white rounded-2xl shadow-xl p-8 text-center\">\n            <div className=\"flex flex-col items-center\">\n              <div className=\"mb-6 relative\">\n                <div className=\"absolute inset-0 flex items-center justify-center\">\n                  <span className=\"text-sm font-medium text-red-600\">{uploadProgress}%</span>\n                </div>\n                <svg className=\"w-20 h-20 transform rotate-[-90deg]\">\n                  <circle\n                    cx=\"40\" cy=\"40\" r=\"36\"\n                    className=\"stroke-slate-200\"\n                    strokeWidth=\"8\"\n                    fill=\"transparent\"\n                  />\n                  <circle\n                    cx=\"40\" cy=\"40\" r=\"36\"\n                    className=\"stroke-red-600\"\n                    strokeWidth=\"8\"\n                    fill=\"transparent\"\n                    strokeDasharray={36 * 2 * Math.PI}\n                    strokeDashoffset={36 * 2 * Math.PI - (36 * 2 * Math.PI * uploadProgress / 100)}\n                    strokeLinecap=\"round\"\n                  />\n                </svg>\n              </div>\n              <h3 className=\"text-xl font-bold text-slate-800\">Analyzing Your Exam</h3>\n              <div className=\"mt-6 space-y-3 text-left max-w-sm mx-auto\">\n                <div className=\"flex items-center text-sm\">\n                  <div className={`w-4 h-4 rounded-full ${uploadProgress >= 25 ? 'bg-red-600' : 'bg-slate-200'} mr-3`}></div>\n                  <span className={uploadProgress >= 25 ? 'text-slate-800' : 'text-slate-400'}>Parsing document structure</span>\n                </div>\n                <div className=\"flex items-center text-sm\">\n                  <div className={`w-4 h-4 rounded-full ${uploadProgress >= 50 ? 'bg-red-600' : 'bg-slate-200'} mr-3`}></div>\n                  <span className={uploadProgress >= 50 ? 'text-slate-800' : 'text-slate-400'}>Analyzing questions and topics</span>\n                </div>\n                <div className=\"flex items-center text-sm\">\n                  <div className={`w-4 h-4 rounded-full ${uploadProgress >= 75 ? 'bg-red-600' : 'bg-slate-200'} mr-3`}></div>\n                  <span className={uploadProgress >= 75 ? 'text-slate-800' : 'text-slate-400'}>Generating recommendations</span>\n                </div>\n                <div className=\"flex items-center text-sm\">\n                  <div className={`w-4 h-4 rounded-full ${uploadProgress >= 100 ? 'bg-red-600' : 'bg-slate-200'} mr-3`}></div>\n                  <span className={uploadProgress >= 100 ? 'text-slate-800' : 'text-slate-400'}>Finalizing results</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {analysis && !loading && (\n          <div className=\"space-y-8\">\n            {/* Top summary cards */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              <div className=\"bg-white rounded-2xl shadow-md p-6 border border-slate-100\">\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <p className=\"text-sm text-slate-500 mb-1\">Questions Analyzed</p>\n                    <h3 className=\"text-3xl font-bold text-slate-800\">{analysis.questions.length}</h3>\n                  </div>\n                  <div className=\"bg-blue-50 p-3 rounded-lg\">\n                    <FileQuestion size={20} className=\"text-blue-600\" />\n                  </div>\n                </div>\n              </div>\n             \n              <div className=\"bg-white rounded-2xl shadow-md p-6 border border-slate-100\">\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <p className=\"text-sm text-slate-500 mb-1\">Total Points</p>\n                    <h3 className=\"text-3xl font-bold text-slate-800\">\n                      {analysis.questions.reduce((sum, q) => sum + (q['Final Points'] || 0), 0)}\n                    </h3>\n                  </div>\n                  <div className=\"bg-green-50 p-3 rounded-lg\">\n                    <BarChart3 size={20} className=\"text-green-600\" />\n                  </div>\n                </div>\n              </div>\n             \n              <div className=\"bg-white rounded-2xl shadow-md p-6 border border-slate-100\">\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <p className=\"text-sm text-slate-500 mb-1\">Topics Covered</p>\n                    <h3 className=\"text-3xl font-bold text-slate-800\">{topicData().length}</h3>\n                  </div>\n                  <div className=\"bg-purple-50 p-3 rounded-lg\">\n                    <PieChartIcon size={20} className=\"text-purple-600\" />\n                  </div>\n                </div>\n              </div>\n             \n              <div className=\"bg-white rounded-2xl shadow-md p-6 border border-slate-100\">\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <p className=\"text-sm text-slate-500 mb-1\">Exam Quality</p>\n                    <h3 className={`text-3xl font-bold ${qualityColor}`}>{qualityScore}%</h3>\n                  </div>\n                  <div className=\"bg-amber-50 p-3 rounded-lg\">\n                    {qualityScore >= 80 ? (\n                      <CheckCircle2 size={20} className=\"text-amber-600\" />\n                    ) : (\n                      <AlertTriangle size={20} className=\"text-amber-600\" />\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n           \n            {/* Tabs Navigation */}\n            <div className=\"bg-white rounded-2xl shadow-md overflow-hidden\">\n              <div className=\"border-b border-slate-200\">\n                <nav className=\"flex -mb-px\">\n                  <button\n                    onClick={() => setActiveTab('overview')}\n                    className={`py-4 px-6 flex items-center font-medium text-sm border-b-2 transition-colors ${\n                      activeTab === 'overview'\n                        ? 'border-red-600 text-red-600'\n                        : 'border-transparent text-slate-500 hover:text-slate-700'\n                    }`}\n                  >\n                    <BarChart3 size={16} className=\"mr-2\" />\n                    Overview\n                  </button>\n                  <button\n                    onClick={() => setActiveTab('recommendations')}\n                    className={`py-4 px-6 flex items-center font-medium text-sm border-b-2 transition-colors ${\n                      activeTab === 'recommendations'\n                        ? 'border-red-400 text-red-400'\n                        : 'border-transparent text-slate-500 hover:text-slate-700'\n                    }`}\n                  >\n                    <AlertCircle size={16} className=\"mr-2\" />\n                    Recommendations\n                    {getSuggestionsCount() > 0 && (\n                      <span className=\"ml-2 bg-rose-100 text-rose-600 px-2 py-0.5 rounded-full text-xs\">\n                        {getSuggestionsCount()}\n                      </span>\n                    )}\n                  </button>\n                  <button\n                    onClick={() => setActiveTab('questions')}\n                    className={`py-4 px-6 flex items-center font-medium text-sm border-b-2 transition-colors ${\n                      activeTab === 'questions'\n                        ? 'border-red-600 text-red-600'\n                        : 'border-transparent text-slate-500 hover:text-slate-700'\n                    }`}\n                  >\n                    <FileQuestion size={16} className=\"mr-2\" />\n                    Questions\n                  </button>\n                </nav>\n              </div>\n             \n              {/* Tab Content */}\n              <div className=\"p-6\">\n                {activeTab === 'overview' && (\n                  <div className=\"space-y-8\">\n                    {/* Charts grid */}\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                    <div className=\"bg-white p-6 rounded-xl border border-slate-200 shadow-sm\">\n                        <h3 className=\"font-semibold mb-6 text-slate-800\">Bloom Taxonomy Levels</h3>\n                        <ResponsiveContainer width=\"100%\" height={300}>\n                          <PieChart>\n                            <Pie\n                              data={bloomData()}\n                              dataKey=\"value\"\n                              nameKey=\"name\"\n                              cx=\"50%\"\n                              cy=\"50%\"\n                              outerRadius={90}\n                              fill=\"#8884d8\"\n                              label={({name, percent}) => `${name} ${(percent * 100).toFixed(0)}%`}\n                            >\n                              {bloomData().map((_, index) => (\n                                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                              ))}\n                            </Pie>\n                            <Tooltip formatter={(value) => [`${value} Questions`, 'Count']} />\n                          </PieChart>\n                        </ResponsiveContainer>\n                      </div>\n                                           \n                      <div className=\"bg-white p-6 rounded-xl border border-slate-200 shadow-sm\">\n                        <h3 className=\"font-semibold mb-6 text-slate-800\">Topic Distribution</h3>\n                        <ResponsiveContainer width=\"100%\" height={300}>\n                          <BarChart\n                            layout=\"vertical\"\n                            data={topicData()}\n                            margin={{ top: 20, right: 20, left: 10, bottom: 5 }}\n                            barSize={24}\n                          >\n                            <defs>\n                              {topicData().map((entry, index) => (\n                                <linearGradient key={`gradient-${index}`} id={`topicGradient${index}`} x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                                  <stop offset=\"0%\" stopColor={COLORS[index % COLORS.length]} stopOpacity={0.7} />\n                                  <stop offset=\"100%\" stopColor={COLORS[index % COLORS.length]} stopOpacity={1} />\n                                </linearGradient>\n                              ))}\n                            </defs>\n                            <XAxis\n                              type=\"number\"\n                              axisLine={false}\n                              tickLine={false}\n                              tick={{ fill: '#64748b', fontSize: 12 }}\n                            />\n                            <YAxis\n                              dataKey=\"name\"\n                              type=\"category\"\n                              width={100}\n                              axisLine={false}\n                              tickLine={false}\n                              tick={{ fill: '#334155', fontSize: 12, fontWeight: 500 }}\n                            />\n                            <Tooltip\n                              formatter={(value) => [`${value} Questions`, 'Count']}\n                              contentStyle={{\n                                backgroundColor: 'rgba(255, 255, 255, 0.95)',\n                                borderRadius: '8px',\n                                boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\n                                border: 'none'\n                              }}\n                            />\n                            <Bar\n                              dataKey=\"value\"\n                              name=\"Questions\"\n                              radius={[0, 8, 8, 0]}\n                              label={{\n                                position: 'right',\n                                fill: '#334155',\n                                fontSize: 12,\n                                fontWeight: 500,\n                                formatter: (value) => `${value}`\n                              }}\n                            >\n                              {topicData().map((entry, index) => (\n                                <Cell\n                                  key={`cell-${index}`}\n                                  fill={`url(#topicGradient${index})`}\n                                />\n                              ))}\n                            </Bar>\n                          </BarChart>\n                        </ResponsiveContainer>\n                      </div>\n                     \n                      <div className=\"bg-white p-6 rounded-xl border border-slate-200 shadow-sm\">\n                        <h3 className=\"font-semibold mb-6 text-slate-800\">Question Difficulty</h3>\n                        <ResponsiveContainer width=\"100%\" height={300}>\n                          <RadarChart data={difficultyData()}>\n                            <PolarGrid />\n                            <PolarAngleAxis dataKey=\"subject\" />\n                            <PolarRadiusAxis />\n                            <Radar name=\"Questions\" dataKey=\"A\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6} />\n                            <Tooltip />\n                          </RadarChart>\n                        </ResponsiveContainer>\n                      </div>\n                    </div>\n                   \n                    <div className=\"bg-white p-6 rounded-xl border border-slate-200 shadow-sm\">\n                      <h3 className=\"font-semibold mb-6 text-slate-800\">Points Distribution</h3>\n                      <ResponsiveContainer width=\"100%\" height={300}>\n                        <BarChart data={pointData()}>\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Bar dataKey=\"points\" fill=\"#dc2626\" radius={[4, 4, 0, 0]} />\n                        </BarChart>\n                      </ResponsiveContainer>\n                    </div>\n                  </div>\n                )}\n               \n                {activeTab === 'recommendations' && (\n                  <div className=\"space-y-8\">\n                    <div className=\"bg-red-50 rounded-xl p-6 border border-red-100\">\n                      <h3 className=\"text-xl font-bold text-red-800 mb-4\">Overall Exam Assessment</h3>\n                      <div className=\"prose prose-slate prose-indigo max-w-none text-slate-700\">\n                        <p>{analysis.recommendations}</p>\n                      </div>\n                    </div>\n                   \n                    <div className=\"space-y-6\">\n                      <h3 className=\"text-xl font-bold text-slate-800\">Key Improvement Areas</h3>\n                     \n                      {analysis.questions\n                        .filter(q => q['Recommendation'] && q['Recommendation'].trim() !== '')\n                        .map((q, idx) => (\n                          <div key={idx} className=\"bg-white rounded-xl p-6 border border-slate-200 shadow-sm hover:shadow-md transition-shadow\">\n                            <div className=\"flex items-start gap-4\">\n                              <div className={`rounded-full p-2 ${\n                                q['Recommendation'].toLowerCase().includes('excellent')\n                                  ? 'bg-green-50 text-green-600'\n                                  : 'bg-amber-50 text-amber-600'\n                              }`}>\n                                {q['Recommendation'].toLowerCase().includes('excellent')\n                                  ? <CheckCircle2 size={20} />\n                                  : <AlertTriangle size={20} />\n                                }\n                              </div>\n                              <div>\n                                <p className=\"font-medium text-slate-800 mb-1\">Question {q['Question Number']}</p>\n                                <p className=\"text-sm text-slate-600 mb-3\">{q['Question Text']}</p>\n                                <div className=\"flex flex-wrap gap-2 mb-3\">\n                                  <span className=\"text-xs px-2 py-1 rounded-full bg-blue-50 text-blue-700\">{q['Bloom Level']}</span>\n                                  <span className=\"text-xs px-2 py-1 rounded-full bg-purple-50 text-purple-700\">{q['Topic']}</span>\n                                  <span className=\"text-xs px-2 py-1 rounded-full bg-green-50 text-green-700\">{q['Final Points']} points</span>\n                                </div>\n                                <p className=\"text-sm bg-slate-50 p-3 rounded border border-slate-200\">{q['Recommendation']}</p>\n                              </div>\n                            </div>\n                          </div>\n                        ))\n                      }\n                    </div>\n                  </div>\n                )}\n               \n                {activeTab === 'questions' && (\n                  <div className=\"space-y-6\">\n                    <div className=\"overflow-hidden overflow-x-auto sm:rounded-lg\">\n                      <table className=\"min-w-full divide-y divide-slate-200\">\n                        <thead className=\"bg-slate-50\">\n                          <tr>\n                            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider\">\n                              #\n                            </th>\n                            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider\">\n                              Question Text\n                            </th>\n                            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider\">\n                              Bloom Level\n                            </th>\n                            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider\">\n                              Topic\n                            </th>\n                            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider\">\n                              Points\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"bg-white divide-y divide-slate-200\">\n                          {analysis.questions.map((q, idx) => (\n                            <tr key={idx} className=\"hover:bg-slate-50\">\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-slate-800\">\n                                {q['Question Number']}\n                              </td>\n                              <td className=\"px-6 py-4 text-sm text-slate-600 max-w-md truncate\">\n                                {q['Question Text']}\n                              </td>\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n                                <span className=\"px-2 py-1 text-xs rounded-full bg-blue-50 text-blue-700\">\n                                  {q['Bloom Level']}\n                                </span>\n                              </td>\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n                                <span className=\"px-2 py-1 text-xs rounded-full bg-purple-50 text-purple-700\">\n                                  {q['Topic']}\n                                </span>\n                              </td>\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n                                <span className=\"px-2 py-1 text-xs rounded-full bg-green-50 text-green-700\">\n                                  {q['Final Points']}\n                                </span>\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n           \n            {/* Action buttons */}\n            <div className=\"flex justify-between\">\n              <button\n                onClick={() => {\n                  setFile(null);\n                  setAnalysis(null);\n                }}\n                className=\"inline-flex items-center px-4 py-2 border border-slate-300 rounded-lg shadow-sm text-sm font-medium text-slate-700 bg-white hover:bg-slate-50\"\n              >\n                <ArrowLeft size={16} className=\"mr-2\" />\n                Analyze Another Exam\n              </button>\n             \n              <button className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700\">\n                <Download size={16} className=\"mr-2\" />\n                Download Report\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n     \n      {/* Animated footer with gradient */}\n      <footer className=\"mt-16 py-6 bg-gradient-to-r from-gray-600 to-gray-600 text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center\">\n            <div className=\"flex items-center mb-4 md:mb-0\">\n              <Brain size={24} className=\"mr-2\" />\n              <span className=\"font-bold text-lg\">Exam Analyzer AI</span>\n            </div>\n            <p className=\"text-red-100 text-sm\">\n              Powered by advanced AI to help educators create better assessments\n            </p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1799, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}