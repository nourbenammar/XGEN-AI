{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/XGEN_AI/src/lib/utils.js"],"sourcesContent":["import { clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAM;IAC1B,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/XGEN_AI/src/components/ui/card.jsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"rounded-lg border bg-card text-card-foreground shadow-sm\", className)}\n    {...props} />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props} />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-2xl font-semibold leading-none tracking-tight\", className)}\n    {...props} />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props} />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props} />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACtD,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4DAA4D;QACzE,GAAG,KAAK;;;;;;AAEb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sDAAsD;QACnE,GAAG,KAAK;;;;;;AAEb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACjE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAEb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/XGEN_AI/src/components/ui/button.jsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Button = React.forwardRef(({ className, variant, size, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n  return (\n    (<Comp\n      className={cn(buttonVariants({ variant, size, className }))}\n      ref={ref}\n      {...props} />)\n  );\n})\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,MAAM,uBAAS,sMAAM,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxF,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACG,8OAAC;QACA,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAEf;AACA,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/XGEN_AI/src/components/ui/collapsible.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Collapsible = registerClientReference(\n    function() { throw new Error(\"Attempted to call Collapsible() from the server but Collapsible is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/collapsible.jsx <module evaluation>\",\n    \"Collapsible\",\n);\nexport const CollapsibleContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call CollapsibleContent() from the server but CollapsibleContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/collapsible.jsx <module evaluation>\",\n    \"CollapsibleContent\",\n);\nexport const CollapsibleTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call CollapsibleTrigger() from the server but CollapsibleTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/collapsible.jsx <module evaluation>\",\n    \"CollapsibleTrigger\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,mEACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,mEACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,mEACA"}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/XGEN_AI/src/components/ui/collapsible.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Collapsible = registerClientReference(\n    function() { throw new Error(\"Attempted to call Collapsible() from the server but Collapsible is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/collapsible.jsx\",\n    \"Collapsible\",\n);\nexport const CollapsibleContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call CollapsibleContent() from the server but CollapsibleContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/collapsible.jsx\",\n    \"CollapsibleContent\",\n);\nexport const CollapsibleTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call CollapsibleTrigger() from the server but CollapsibleTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/collapsible.jsx\",\n    \"CollapsibleTrigger\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,+CACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,+CACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,+CACA"}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/XGEN_AI/src/components/ui/tabs.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Tabs = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tabs() from the server but Tabs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.jsx <module evaluation>\",\n    \"Tabs\",\n);\nexport const TabsContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsContent() from the server but TabsContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.jsx <module evaluation>\",\n    \"TabsContent\",\n);\nexport const TabsList = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsList() from the server but TabsList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.jsx <module evaluation>\",\n    \"TabsList\",\n);\nexport const TabsTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsTrigger() from the server but TabsTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.jsx <module evaluation>\",\n    \"TabsTrigger\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,4DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,4DACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,4DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,4DACA"}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/XGEN_AI/src/components/ui/tabs.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Tabs = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tabs() from the server but Tabs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.jsx\",\n    \"Tabs\",\n);\nexport const TabsContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsContent() from the server but TabsContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.jsx\",\n    \"TabsContent\",\n);\nexport const TabsList = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsList() from the server but TabsList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.jsx\",\n    \"TabsList\",\n);\nexport const TabsTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsTrigger() from the server but TabsTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.jsx\",\n    \"TabsTrigger\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,wCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wCACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,wCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wCACA"}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/XGEN_AI/src/components/ui/tooltip.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Tooltip = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tooltip() from the server but Tooltip is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tooltip.jsx <module evaluation>\",\n    \"Tooltip\",\n);\nexport const TooltipContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TooltipContent() from the server but TooltipContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tooltip.jsx <module evaluation>\",\n    \"TooltipContent\",\n);\nexport const TooltipProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call TooltipProvider() from the server but TooltipProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tooltip.jsx <module evaluation>\",\n    \"TooltipProvider\",\n);\nexport const TooltipTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call TooltipTrigger() from the server but TooltipTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tooltip.jsx <module evaluation>\",\n    \"TooltipTrigger\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,+DACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,+DACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,+DACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,+DACA"}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/XGEN_AI/src/components/ui/tooltip.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Tooltip = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tooltip() from the server but Tooltip is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tooltip.jsx\",\n    \"Tooltip\",\n);\nexport const TooltipContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TooltipContent() from the server but TooltipContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tooltip.jsx\",\n    \"TooltipContent\",\n);\nexport const TooltipProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call TooltipProvider() from the server but TooltipProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tooltip.jsx\",\n    \"TooltipProvider\",\n);\nexport const TooltipTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call TooltipTrigger() from the server but TooltipTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tooltip.jsx\",\n    \"TooltipTrigger\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,2CACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2CACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,2CACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2CACA"}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 332, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 342, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/XGEN_AI/src/components/ui/progress.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Progress = registerClientReference(\n    function() { throw new Error(\"Attempted to call Progress() from the server but Progress is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/progress.jsx <module evaluation>\",\n    \"Progress\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,gEACA"}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/XGEN_AI/src/components/ui/progress.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Progress = registerClientReference(\n    function() { throw new Error(\"Attempted to call Progress() from the server but Progress is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/progress.jsx\",\n    \"Progress\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,4CACA"}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 370, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/XGEN_AI/src/components/ui/badge.jsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  ...props\n}) {\n  return (<div className={cn(badgeVariants({ variant }), className)} {...props} />);\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OACJ;IACC,qBAAQ,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAC9E"}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 424, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/XGEN_AI/src/app/%28dashboard%29/syllabus/page.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Card, CardContent, CardHeader } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { \n  Upload, \n  CheckCircle, \n  Loader2, \n  Download, \n  RotateCw, \n  AlertCircle,\n  Info,\n  Book,\n  PieChart,\n  List,\n  FileText,\n  ChevronDown,\n  ChevronUp,\n  HelpCircle\n} from \"lucide-react\";\nimport { \n  Collapsible, \n  CollapsibleContent, \n  CollapsibleTrigger \n} from \"@/components/ui/collapsible\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\nimport { PieChart as RechartsChart, Pie, Cell, ResponsiveContainer, Legend, Tooltip as ChartTooltip } from \"recharts\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { Step, Stepper } from \"@/components/ui/stepper\";\n\nconst DashboardPage = () => {\n  // State management\n  const [file, setFile] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [reportGenerated, setReportGenerated] = useState(false);\n  const [reportContent, setReportContent] = useState(\"\");\n  const [backendResponse, setBackendResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState(\"outcomes\");\n  const [showHelp, setShowHelp] = useState(false);\n  const [currentStep, setCurrentStep] = useState(1);\n  const [showTooltips, setShowTooltips] = useState(true);\n\n  // Handle file selection\n  const handleFileChange = (event) => {\n    const selectedFile = event.target.files?.[0];\n    if (\n      selectedFile &&\n      (selectedFile.type === \"application/pdf\" ||\n        selectedFile.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ||\n        selectedFile.type === \"application/msword\")\n    ) {\n      setFile(selectedFile);\n      setError(null);\n      setCurrentStep(2);\n    } else {\n      setError(\"Please upload a valid PDF or DOC file.\");\n      setFile(null);\n    }\n  };\n\n  // Drag and drop handlers\n  const handleDragOver = (event) => {\n    event.preventDefault();\n    setIsDragging(true);\n  };\n\n  const handleDragLeave = () => {\n    setIsDragging(false);\n  };\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n    setIsDragging(false);\n    const droppedFile = event.dataTransfer.files?.[0];\n    if (\n      droppedFile &&\n      (droppedFile.type === \"application/pdf\" ||\n        droppedFile.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ||\n        droppedFile.type === \"application/msword\")\n    ) {\n      setFile(droppedFile);\n      setError(null);\n      setCurrentStep(2);\n    } else {\n      setError(\"Please drop a valid PDF or DOC file.\");\n      setFile(null);\n    }\n  };\n\n  // Score chart data\n  const generateScoreData = (scoring) => {\n    if (!scoring) return [];\n    \n    return [\n      { name: \"Bloom Coverage\", value: scoring.bloom_coverage || 0, color: \"#22c55e\" },\n      { name: \"Alignment\", value: scoring.alignment_score || 0, color: \"#3b82f6\" }, \n      { name: \"Completeness\", value: scoring.completeness_score || 0, color: \"#ec4899\" }\n    ];\n  };\n\n  // Bloom taxonomy bar data\n  const getBloomLevelColor = (level) => {\n    const colors = {\n      \"Remember\": \"#d4b4ff\", \n      \"Understand\": \"#93c5fd\",\n      \"Apply\": \"#86efac\",\n      \"Analyze\": \"#fde047\",\n      \"Evaluate\": \"#fdba74\",\n      \"Create\": \"#f87171\"\n    };\n    return colors[level] || \"#cbd5e1\";\n  };\n\n  const generatePdfReport = async (data) => {\n    // We'll keep your existing PDF generation logic but improve it\n    // This is a placeholder for the actual PDF generation \n    // which should be enhanced with charts, better formatting, etc.\n    const fileName = file?.name\n      ? `syllabus_improvement_${file.name.replace(/\\.[^/.]+$/, \"\")}.pdf`\n      : \"syllabus_improvement_report.pdf\";\n      \n    // PDF generation logic would go here\n    // ...\n    \n    // For now, just set the report content\n    const { syllabus, enhancement } = data;\n    const originalOutcomes = syllabus?.content?.objectives || [];\n    const improvedOutcomes = enhancement?.improved_outcomes || [];\n    const misalignments = enhancement?.misalignments || [];\n    const suggestions = enhancement?.suggestions || [];\n    \n    const content = `\nSyllabus Improvement Report\n\nFile Processed: ${fileName}\n\nOriginal Learning Outcomes:\n${originalOutcomes.length === 0 ? \"No objectives provided in the syllabus.\" : originalOutcomes.map((item) => `- ${item}`).join(\"\\n\")}\n\nImproved Learning Outcomes:\n${improvedOutcomes.length === 0 ? \"No improved outcomes generated.\" : improvedOutcomes.map((item) => `- ${item}`).join(\"\\n\")}\n\nAssessment Improvements:\nBloom's Taxonomy Analysis\n- Found Levels: ${enhancement?.bloom_analysis?.found_levels?.join(\", \") || \"N/A\"}\n- Missing Levels: ${enhancement?.bloom_analysis?.missing_levels?.join(\", \") || \"N/A\"}\n\nMisalignments:\n${misalignments.length === 0 ? \"No misalignments detected.\" : misalignments.map((item) => `- ${item}`).join(\"\\n\")}\n\nSuggestions:\n${suggestions.length === 0 ? \"No suggestions provided.\" : suggestions.map((item) => `- ${item}`).join(\"\\n\")}\n\nScoring:\n- Score: ${enhancement?.scoring?.score || \"N/A\"}/100\n- Bloom Coverage: ${enhancement?.scoring?.bloom_coverage || \"N/A\"}%\n- Alignment Score: ${enhancement?.scoring?.alignment_score || \"N/A\"}\n- Completeness Score: ${enhancement?.scoring?.completeness_score || \"N/A\"}\n    `;\n\n    setReportContent(content.trim());\n    return true;\n  };\n\n  // Form submission handler\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (!file) {\n      setError(\"Please select a file to upload.\");\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    setCurrentStep(3);\n\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      const response = await fetch(\"http://localhost:5000/api/syllabus/upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      if (data.error) {\n        if (data.error.includes(\"GROQ_API_KEY\") || data.error.includes(\"Groq client\")) {\n          setError(\"The server is misconfigured. Please contact the administrator.\");\n        } else if (data.error.includes(\"No text\")) {\n          setError(\"The uploaded file contains no readable text. Please upload a valid syllabus file.\");\n        } else {\n          setError(data.error || \"An error occurred while processing the file.\");\n        }\n        throw new Error(data.error);\n      }\n\n      setBackendResponse(data);\n      await generatePdfReport(data);\n      setReportGenerated(true);\n      setCurrentStep(4);\n    } catch (error) {\n      console.error(\"Error during file upload:\", error);\n      setError(\"Failed to process the file. Please try again.\");\n      setCurrentStep(2);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Download handler\n  const handleDownload = async () => {\n    if (!backendResponse) {\n      setError(\"No report data available to download.\");\n      return;\n    }\n\n    try {\n      await generatePdfReport(backendResponse);\n      // In a real implementation, this would generate and download the PDF\n      alert(\"PDF download functionality will be implemented with jsPDF\");\n    } catch (error) {\n      setError(\"Failed to download report. Please try again.\");\n      console.error(error);\n    }\n  };\n\n  // Reset handler\n  const handleReset = () => {\n    if (window.confirm(\"Are you sure you want to reset? All current data will be lost.\")) {\n      setFile(null);\n      setReportGenerated(false);\n      setReportContent(\"\");\n      setBackendResponse(null);\n      setError(null);\n      setCurrentStep(1);\n      setActiveTab(\"outcomes\");\n    }\n  };\n\n  // Help content component\n  const HelpGuide = () => (\n    <Card className=\"mt-4 border border-blue-200 bg-blue-50 dark:bg-blue-900/20 dark:border-blue-800\">\n      <CardHeader className=\"pb-2\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-lg font-semibold text-blue-700 dark:text-blue-300 flex items-center\">\n            <HelpCircle className=\"w-5 h-5 mr-2\" />\n            How to Use This Tool\n          </h3>\n          <Button \n            variant=\"ghost\" \n            size=\"sm\" \n            onClick={() => setShowHelp(false)}\n            className=\"text-blue-700 dark:text-blue-300 hover:bg-blue-200 dark:hover:bg-blue-800/50\"\n          >\n            Close\n          </Button>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4 text-sm text-blue-700 dark:text-blue-200\">\n          <div>\n            <h4 className=\"font-semibold mb-1\">1. Upload Your Syllabus</h4>\n            <p>Upload your syllabus document in PDF or DOC/DOCX format. You can drag and drop or browse your files.</p>\n          </div>\n          <div>\n            <h4 className=\"font-semibold mb-1\">2. Analyze Your Syllabus</h4>\n            <p>Our AI will analyze your learning outcomes against Bloom's Taxonomy and best practices.</p>\n          </div>\n          <div>\n            <h4 className=\"font-semibold mb-1\">3. Review Improvements</h4>\n            <p>Review suggested improvements for learning outcomes, check alignment issues, and view your syllabus score.</p>\n          </div>\n          <div>\n            <h4 className=\"font-semibold mb-1\">4. Download Report</h4>\n            <p>Download a comprehensive PDF report with all analysis and suggestions for later reference.</p>\n          </div>\n          <div className=\"pt-2\">\n            <p className=\"font-semibold\">Understanding Bloom's Taxonomy:</p>\n            <ul className=\"list-disc list-inside ml-2 space-y-1 mt-1\">\n              <li><span className=\"font-medium\">Remember:</span> Recall facts and basic concepts</li>\n              <li><span className=\"font-medium\">Understand:</span> Explain ideas or concepts</li>\n              <li><span className=\"font-medium\">Apply:</span> Use information in new situations</li>\n              <li><span className=\"font-medium\">Analyze:</span> Draw connections among ideas</li>\n              <li><span className=\"font-medium\">Evaluate:</span> Justify a stand or decision</li>\n              <li><span className=\"font-medium\">Create:</span> Produce new or original work</li>\n            </ul>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  // Process status stepper\n  const ProcessStepper = () => (\n    <div className=\"w-full mb-8\">\n      <Stepper activeStep={currentStep} orientation=\"horizontal\">\n        <Step \n          completed={currentStep > 1}\n          active={currentStep === 1}\n          icon={<Upload className=\"w-5 h-5\" />}\n          label=\"Upload Syllabus\"\n        />\n        <Step\n          completed={currentStep > 2}\n          active={currentStep === 2}\n          icon={<FileText className=\"w-5 h-5\" />}\n          label=\"Review File\"\n        />\n        <Step\n          completed={currentStep > 3}\n          active={currentStep === 3}\n          icon={<PieChart className=\"w-5 h-5\" />}\n          label=\"Analyzing\"\n        />\n        <Step\n          completed={currentStep === 4}\n          active={currentStep === 4}\n          icon={<CheckCircle className=\"w-5 h-5\" />}\n          label=\"Results Ready\"\n        />\n      </Stepper>\n    </div>\n  );\n\n  // Score gauge visualization\n  const ScoreGauge = ({ score = 0 }) => {\n    const scoreColor = \n      score >= 80 ? \"text-green-500\" :\n      score >= 60 ? \"text-yellow-500\" :\n      \"text-red-500\";\n      \n    return (\n      <div className=\"flex flex-col items-center\">\n        <div className=\"relative h-32 w-32\">\n          <svg className=\"w-full h-full\" viewBox=\"0 0 100 100\">\n            {/* Background circle */}\n            <circle\n              cx=\"50\"\n              cy=\"50\"\n              r=\"45\"\n              fill=\"none\"\n              stroke=\"#e5e7eb\"\n              strokeWidth=\"10\"\n              strokeLinecap=\"round\"\n            />\n            {/* Score circle */}\n            <circle\n              cx=\"50\"\n              cy=\"50\"\n              r=\"45\"\n              fill=\"none\"\n              stroke={score >= 80 ? \"#22c55e\" : score >= 60 ? \"#eab308\" : \"#ef4444\"}\n              strokeWidth=\"10\"\n              strokeLinecap=\"round\"\n              strokeDasharray={`${(score/100) * 283} 283`}\n              transform=\"rotate(-90 50 50)\"\n            />\n            <text\n              x=\"50\"\n              y=\"50\"\n              textAnchor=\"middle\"\n              dominantBaseline=\"central\"\n              className={`text-2xl font-bold ${scoreColor}`}\n              fill=\"currentColor\"\n            >\n              {score}\n            </text>\n            <text\n              x=\"50\"\n              y=\"65\"\n              textAnchor=\"middle\"\n              className=\"text-xs font-medium text-gray-500\"\n              fill=\"currentColor\"\n            >\n              out of 100\n            </text>\n          </svg>\n        </div>\n      </div>\n    );\n  };\n\n  // BloomTaxonomy breakdown visualization  \n  const BloomTaxonomyBreakdown = ({ bloomAnalysis }) => {\n    if (!bloomAnalysis) return null;\n    \n    const allLevels = [\"Remember\", \"Understand\", \"Apply\", \"Analyze\", \"Evaluate\", \"Create\"];\n    const foundLevels = bloomAnalysis.found_levels || [];\n    const missingLevels = bloomAnalysis.missing_levels || [];\n    \n    return (\n      <div className=\"space-y-3 mt-4\">\n        <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Bloom's Taxonomy Coverage:</h4>\n        <div className=\"grid grid-cols-6 gap-2\">\n          {allLevels.map(level => {\n            const isFound = foundLevels.includes(level);\n            return (\n              <div \n                key={level}\n                className={`flex flex-col items-center p-2 rounded-lg ${\n                  isFound \n                    ? 'bg-green-100 dark:bg-green-900/30 border border-green-200 dark:border-green-800' \n                    : 'bg-gray-100 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 opacity-60'\n                }`}\n              >\n                <div \n                  className=\"w-8 h-8 rounded-full flex items-center justify-center mb-1\"\n                  style={{ backgroundColor: getBloomLevelColor(level) }}\n                >\n                  {isFound ? (\n                    <CheckCircle className=\"w-4 h-4 text-green-700 dark:text-green-300\" />\n                  ) : (\n                    <AlertCircle className=\"w-4 h-4 text-gray-500 dark:text-gray-400\" />\n                  )}\n                </div>\n                <span className=\"text-xs font-medium text-center\">\n                  {level}\n                </span>\n              </div>\n            );\n          })}\n        </div>\n        \n        {missingLevels.length > 0 && (\n          <Alert className=\"bg-yellow-50 border-yellow-200 dark:bg-yellow-900/20 dark:border-yellow-800\">\n            <AlertCircle className=\"h-4 w-4 text-yellow-600 dark:text-yellow-400\" />\n            <AlertTitle className=\"text-yellow-800 dark:text-yellow-300\">Missing Bloom Levels</AlertTitle>\n            <AlertDescription className=\"text-yellow-700 dark:text-yellow-200 text-sm\">\n              Your syllabus is missing the following cognitive levels: \n              <span className=\"font-medium ml-1\">{missingLevels.join(\", \")}</span>. \n              Consider adding learning outcomes that address these levels.\n            </AlertDescription>\n          </Alert>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"relative min-h-screen flex flex-col items-center justify-center overflow-hidden bg-gradient-to-br from-[#3b0000] via-[#4d0000] to-[#4e0000] px-4 py-8\">\n      <div className=\"relative z-10 w-full max-w-4xl flex flex-col items-center pt-2 pb-10 space-y-8\">\n        <div className=\"text-center\">\n          <h1 className=\"text-5xl font-extrabold leading-tight text-white drop-shadow-lg mb-2\">\n            <span className=\"text-white\">Syllabus</span> <span className=\"text-red-300\">Improvement</span>\n          </h1>\n          <p className=\"text-lg text-red-100 max-w-2xl\">\n            Enhance your course syllabus with AI-powered analysis and recommendations\n          </p>\n        </div>\n\n        {!reportGenerated && <ProcessStepper />}\n\n        <Card className=\"w-full bg-white/90 dark:bg-slate-900/90 backdrop-blur-md border border-gray-300 dark:border-gray-700 shadow-xl rounded-2xl\">\n          <CardHeader className=\"pb-2 flex flex-row items-center justify-between\">\n            <div>\n              <h2 className=\"text-xl font-bold text-gray-800 dark:text-gray-200\">\n                {reportGenerated ? \"Syllabus Analysis Results\" : \"Upload Your Syllabus\"}\n              </h2>\n              <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\n                {reportGenerated \n                  ? \"Review your syllabus analysis and suggested improvements\" \n                  : \"Upload your syllabus in PDF or DOC format for analysis\"\n                }\n              </p>\n            </div>\n            \n            <TooltipProvider>\n              <Tooltip>\n                <TooltipTrigger asChild>\n                  <Button \n                    variant=\"ghost\" \n                    size=\"icon\"\n                    onClick={() => setShowHelp(!showHelp)}\n                    className=\"rounded-full\"\n                  >\n                    <HelpCircle className=\"h-5 w-5 text-gray-500 dark:text-gray-400\" />\n                  </Button>\n                </TooltipTrigger>\n                <TooltipContent>\n                  <p>Get help using this tool</p>\n                </TooltipContent>\n              </Tooltip>\n            </TooltipProvider>\n          </CardHeader>\n\n          <CardContent className=\"p-6\">\n            {showHelp && <HelpGuide />}\n            \n            {error && (\n              <Alert className=\"mb-6 bg-red-50 border-red-200 dark:bg-red-900/20 dark:border-red-800\">\n                <AlertCircle className=\"h-4 w-4 text-red-600 dark:text-red-400\" />\n                <AlertTitle className=\"text-red-800 dark:text-red-300\">Error</AlertTitle>\n                <AlertDescription className=\"text-red-700 dark:text-red-200\">\n                  {error}\n                </AlertDescription>\n              </Alert>\n            )}\n\n            {!reportGenerated ? (\n              <form onSubmit={handleSubmit} className=\"space-y-8\">\n                <div\n                  className={`flex flex-col items-center justify-center w-full h-72 border-2 border-dashed rounded-xl cursor-pointer transition-colors duration-200 ${\n                    isDragging\n                      ? \"border-red-400 bg-red-100 dark:bg-red-900/30\"\n                      : \"border-gray-300 dark:border-gray-600 hover:bg-gray-100 dark:hover:bg-slate-800\"\n                  }`}\n                  onDragOver={handleDragOver}\n                  onDragLeave={handleDragLeave}\n                  onDrop={handleDrop}\n                >\n                  <label\n                    htmlFor=\"file-upload\"\n                    className=\"flex flex-col items-center justify-center w-full h-full\"\n                    aria-label=\"Upload syllabus file\"\n                  >\n                    <div className=\"flex flex-col items-center space-y-4\">\n                      {file ? (\n                        <div className=\"flex flex-col items-center\">\n                          <CheckCircle className=\"w-16 h-16 text-green-500 mb-2\" />\n                          <Badge className=\"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200 mb-2\">\n                            File Selected\n                          </Badge>\n                        </div>\n                      ) : (\n                        <div \n                          className=\"w-20 h-20 rounded-full bg-red-100 dark:bg-red-900/30 flex items-center justify-center\"\n                        >\n                          <Upload className=\"w-10 h-10 text-red-500\" />\n                        </div>\n                      )}\n                      <p className=\"text-lg font-medium text-gray-700 dark:text-gray-300\">\n                        {file ? file.name : \"Upload PDF or DOC file\"}\n                      </p>\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400 flex items-center\">\n                        <Info className=\"w-4 h-4 mr-1\" />\n                        Click to browse or drag and drop\n                      </p>\n                    </div>\n                    <input\n                      id=\"file-upload\"\n                      type=\"file\"\n                      accept=\".pdf,.doc,.docx\"\n                      onChange={handleFileChange}\n                      className=\"hidden\"\n                      aria-describedby=\"file-upload-help\"\n                    />\n                    <span id=\"file-upload-help\" className=\"sr-only\">\n                      Upload a PDF or DOC file containing your syllabus\n                    </span>\n                  </label>\n                </div>\n\n                {file && (\n                  <div className=\"bg-green-50 dark:bg-green-900/20 p-4 rounded-lg border border-green-200 dark:border-green-800\">\n                    <div className=\"flex items-start\">\n                      <div className=\"flex-shrink-0\">\n                        <CheckCircle className=\"h-5 w-5 text-green-500\" />\n                      </div>\n                      <div className=\"ml-3\">\n                        <h3 className=\"text-sm font-medium text-green-800 dark:text-green-200\">File ready for analysis</h3>\n                        <div className=\"mt-2 text-sm text-green-700 dark:text-green-300\">\n                          <p>Click \"Analyze Syllabus\" to begin the AI-powered analysis of your document.</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                <Button\n                  type=\"submit\"\n                  disabled={!file || isLoading}\n                  className=\"w-full bg-gradient-to-r from-red-700 to-red-500 hover:from-red-800 hover:to-red-600 text-white text-lg py-6 rounded-full shadow-xl transition-all transform hover:scale-105 uppercase flex items-center justify-center space-x-2 disabled:opacity-50\"\n                  aria-busy={isLoading}\n                >\n                  {isLoading ? (\n                    <>\n                      <Loader2 className=\"w-5 h-5 animate-spin\" />\n                      <span>Processing...</span>\n                    </>\n                  ) : (\n                    <>\n                      <PieChart className=\"w-5 h-5 mr-2\" />\n                      <span>Analyze Syllabus</span>\n                    </>\n                  )}\n                </Button>\n              </form>\n            ) : (\n              <div className=\"flex flex-col space-y-6\">\n                {/* Overall Score Card */}\n                <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md border border-gray-200 dark:border-gray-700\">\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"mb-4 md:mb-0\">\n                      <h3 className=\"text-xl font-bold text-gray-800 dark:text-gray-200 mb-2\">\n                        Overall Assessment\n                      </h3>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\n                        <span className=\"font-medium\">File Analyzed:</span> {file?.name || \"Unknown File\"}\n                      </p>\n                      \n                      {backendResponse?.enhancement?.scoring?.score >= 80 ? (\n                        <Badge className=\"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\">\n                          Excellent\n                        </Badge>\n                      ) : backendResponse?.enhancement?.scoring?.score >= 60 ? (\n                        <Badge className=\"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200\">\n                          Good - Needs Improvement\n                        </Badge>\n                      ) : (\n                        <Badge className=\"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\">\n                          Needs Significant Improvement\n                        </Badge>\n                      )}\n                    </div>\n                    \n                    <ScoreGauge score={backendResponse?.enhancement?.scoring?.score || 0} />\n                  </div>\n                  \n                  <div className=\"mt-6\">\n                    <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">Assessment Breakdown:</h4>\n                    <div className=\"space-y-3\">\n                      <div>\n                        <div className=\"flex justify-between text-xs mb-1\">\n                          <span>Bloom Coverage: {backendResponse?.enhancement?.scoring?.bloom_coverage || 0}%</span>\n                        </div>\n                        <Progress \n                          value={backendResponse?.enhancement?.scoring?.bloom_coverage || 0} \n                          className=\"h-2\"\n                          indicatorClassName=\"bg-green-500\"\n                        />\n                      </div>\n                      <div>\n                        <div className=\"flex justify-between text-xs mb-1\">\n                          <span>Alignment: {backendResponse?.enhancement?.scoring?.alignment_score || 0}%</span>\n                        </div>\n                        <Progress \n                          value={backendResponse?.enhancement?.scoring?.alignment_score || 0} \n                          className=\"h-2\"\n                          indicatorClassName=\"bg-blue-500\" \n                        />\n                      </div>\n                      <div>\n                        <div className=\"flex justify-between text-xs mb-1\">\n                          <span>Completeness: {backendResponse?.enhancement?.scoring?.completeness_score || 0}%</span>\n                        </div>\n                        <Progress \n                          value={backendResponse?.enhancement?.scoring?.completeness_score || 0}\n                          className=\"h-2\" \n                          indicatorClassName=\"bg-pink-500\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Results Tabs */}\n                <Tabs defaultValue=\"outcomes\" className=\"w-full\" onValueChange={setActiveTab}>\n                  <TabsList className=\"grid grid-cols-3 mb-6\">\n                    <TabsTrigger value=\"outcomes\" className=\"flex items-center\">\n                      <Book className=\"w-4 h-4 mr-2\" />\n                      <span>Learning Outcomes</span>\n                    </TabsTrigger>\n                    <TabsTrigger value=\"analysis\" className=\"flex items-center\">\n                      <PieChart className=\"w-4 h-4 mr-2\" />\n                      <span>Analysis</span>\n                    </TabsTrigger>\n                    <TabsTrigger value=\"suggestions\" className=\"flex items-center\">\n                      <List className=\"w-4 h-4 mr-2\" />\n                      <span>Suggestions</span>\n                    </TabsTrigger>\n                  </TabsList>\n                  \n                  <TabsContent value=\"outcomes\" className=\"space-y-4\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <Card className=\"border border-gray-200 dark:border-gray-700 shadow-sm\">\n                        <CardHeader className=\"bg-gray-50 dark:bg-gray-800/50 pb-2\">\n                          <h3 className=\"text-md font-semibold text-gray-800 dark:text-gray-200 flex items-center\">\n                            <FileText className=\"w-4 h-4 mr-2 text-gray-500 dark:text-gray-400\" />\n                            Original Learning Outcomes\n                          </h3>\n                        </CardHeader>\n                        <CardContent className=\"p-4\">\n                          {backendResponse?.syllabus?.content?.objectives?.length === 0 ? (\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                              No objectives provided in the syllabus.\n                            </p>\n                          ) : (\n                            <ul className=\"list-disc pl-5 text-sm text-gray-700 dark:text-gray-300 space-y-2\">\n                              {backendResponse?.syllabus?.content?.objectives?.map((item, index) => (\n                                <li key={index} className=\"mb-1\">{item}</li>\n                              ))}\n                            </ul>\n                          )}\n                        </CardContent>\n                      </Card>\n                      \n                      <Card className=\"border border-red-100 dark:border-red-900/30 shadow-sm bg-red-50/50 dark:bg-red-900/10\">\n                        <CardHeader className=\"bg-red-100 dark:bg-red-900/30 pb-2\">\n                          <h3 className=\"text-md font-semibold text-gray-800 dark:text-gray-200 flex items-center\">\n                            <CheckCircle className=\"w-4 h-4 mr-2 text-red-600 dark:text-red-400\" />\n                            Improved Learning Outcomes\n                          </h3>\n                        </CardHeader>\n                        <CardContent className=\"p-4\">\n                          {backendResponse?.enhancement?.improved_outcomes?.length === 0 ? (\n                            <p className=\"text-sm text-red-500 dark:text-red-400\">\n                              No improved outcomes generated.\n                            </p>\n                          ) : (\n                            <ul className=\"list-disc pl-5 text-sm text-gray-700 dark:text-gray-300 space-y-2\">\n                              {backendResponse?.enhancement?.improved_outcomes?.map((item, index) => (\n                                <li key={index} className=\"mb-1 font-medium\">{item}</li>\n                              ))}\n                            </ul>\n                          )}\n\n                          <div className=\"mt-4 pt-4 border-t border-red-200 dark:border-red-900/30\">\n                            <p className=\"text-xs text-red-700 dark:text-red-300 italic flex items-center\">\n                              <Info className=\"w-3 h-3 mr-1\" />\n                              These improved outcomes use Bloom's taxonomy verbs and are more measurable and specific.\n                            </p>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    </div>\n                    \n                    <Card className=\"border border-blue-100 dark:border-blue-900/30 shadow-sm bg-blue-50/50 dark:bg-blue-900/10\">\n                      <CardHeader className=\"bg-blue-100 dark:bg-blue-900/30 pb-2 flex flex-row items-center justify-between\">\n                        <h3 className=\"text-md font-semibold text-gray-800 dark:text-gray-200\">\n                          Learning Outcomes Comparison\n                        </h3>\n                        <TooltipProvider>\n                          <Tooltip>\n                            <TooltipTrigger asChild>\n                              <Info className=\"w-4 h-4 text-blue-600 dark:text-blue-400\" />\n                            </TooltipTrigger>\n                            <TooltipContent>\n                              <p className=\"text-sm max-w-xs\">\n                                Well-written learning outcomes are specific, measurable, and use active verbs from Bloom's taxonomy.\n                              </p>\n                            </TooltipContent>\n                          </Tooltip>\n                        </TooltipProvider>\n                      </CardHeader>\n                      <CardContent className=\"p-4\">\n                        <div className=\"space-y-4\">\n                          <p className=\"text-sm text-gray-700 dark:text-gray-300\">\n                            The improved learning outcomes focus on making your objectives:\n                          </p>\n                          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\n                            <div className=\"bg-white dark:bg-gray-800 p-3 rounded-lg border border-blue-200 dark:border-blue-900/30\">\n                              <h4 className=\"font-medium text-sm mb-1 text-blue-700 dark:text-blue-300\">Specific</h4>\n                              <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                                Clearly state what students will know or be able to do\n                              </p>\n                            </div>\n                            <div className=\"bg-white dark:bg-gray-800 p-3 rounded-lg border border-blue-200 dark:border-blue-900/30\">\n                              <h4 className=\"font-medium text-sm mb-1 text-blue-700 dark:text-blue-300\">Measurable</h4>\n                              <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                                Allow for clear assessment of student achievement\n                              </p>\n                            </div>\n                            <div className=\"bg-white dark:bg-gray-800 p-3 rounded-lg border border-blue-200 dark:border-blue-900/30\">\n                              <h4 className=\"font-medium text-sm mb-1 text-blue-700 dark:text-blue-300\">Bloom-aligned</h4>\n                              <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                                Use appropriate cognitive level verbs from Bloom's taxonomy\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </TabsContent>\n                  \n                  <TabsContent value=\"analysis\" className=\"space-y-6\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <Card>\n                        <CardHeader className=\"pb-2\">\n                          <h3 className=\"text-md font-semibold text-gray-800 dark:text-gray-200\">\n                            Bloom's Taxonomy Analysis\n                          </h3>\n                        </CardHeader>\n                        <CardContent className=\"p-4\">\n                          <BloomTaxonomyBreakdown bloomAnalysis={backendResponse?.enhancement?.bloom_analysis} />\n                          \n                          <div className=\"mt-6 pt-4 border-t border-gray-200 dark:border-gray-700\">\n                            <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                              Why This Matters:\n                            </h4>\n                            <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                              A well-designed syllabus should include learning outcomes across multiple cognitive levels \n                              of Bloom's taxonomy to ensure students develop both lower-order thinking skills (remember, understand) \n                              and higher-order thinking skills (analyze, evaluate, create).\n                            </p>\n                          </div>\n                        </CardContent>\n                      </Card>\n                      \n                      <Card>\n                        <CardHeader className=\"pb-2\">\n                          <h3 className=\"text-md font-semibold text-gray-800 dark:text-gray-200\">\n                            Assessment Metrics\n                          </h3>\n                        </CardHeader>\n                        <CardContent className=\"p-4\">\n                          {backendResponse?.enhancement?.scoring && (\n                            <div className=\"flex flex-col items-center\">\n                              <div className=\"h-64 w-full\">\n                                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                                  <RechartsChart>\n                                    <Pie\n                                      data={generateScoreData(backendResponse?.enhancement?.scoring)}\n                                      cx=\"50%\"\n                                      cy=\"50%\"\n                                      innerRadius={60}\n                                      outerRadius={80}\n                                      paddingAngle={5}\n                                      dataKey=\"value\"\n                                      label={({ name, value }) => `${name}: ${value}%`}\n                                    >\n                                      {generateScoreData(backendResponse?.enhancement?.scoring).map((entry, index) => (\n                                        <Cell key={`cell-${index}`} fill={entry.color} />\n                                      ))}\n                                    </Pie>\n                                    <Legend verticalAlign=\"bottom\" height={36} />\n                                    <ChartTooltip />\n                                  </RechartsChart>\n                                </ResponsiveContainer>\n                              </div>\n                              \n                              <div className=\"mt-4 w-full\">\n                                <div className=\"text-center mb-2\">\n                                  <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                                    Overall Score: \n                                    <span className=\"ml-1 text-lg font-bold text-red-600 dark:text-red-400\">\n                                      {backendResponse?.enhancement?.scoring?.score || 0}/100\n                                    </span>\n                                  </span>\n                                </div>\n                              </div>\n                            </div>\n                          )}\n                        </CardContent>\n                      </Card>\n                    </div>\n                    \n                    <Card>\n                      <CardHeader className=\"pb-2\">\n                        <h3 className=\"text-md font-semibold text-gray-800 dark:text-gray-200\">\n                          Misalignments\n                        </h3>\n                      </CardHeader>\n                      <CardContent className=\"p-4\">\n                        {backendResponse?.enhancement?.misalignments?.length === 0 ? (\n                          <div className=\"bg-green-50 dark:bg-green-900/20 p-4 rounded-lg border border-green-200 dark:border-green-800\">\n                            <div className=\"flex\">\n                              <div className=\"flex-shrink-0\">\n                                <CheckCircle className=\"h-5 w-5 text-green-500\" />\n                              </div>\n                              <div className=\"ml-3\">\n                                <p className=\"text-sm text-green-700 dark:text-green-300\">\n                                  No misalignments detected. Your learning outcomes are well-aligned with assessments.\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"space-y-4\">\n                            <p className=\"text-sm text-gray-700 dark:text-gray-300\">\n                              The following misalignments were detected between your learning outcomes and assessments:\n                            </p>\n                            <div className=\"bg-yellow-50 dark:bg-yellow-900/20 p-4 rounded-lg border border-yellow-200 dark:border-yellow-800\">\n                              <ul className=\"list-disc pl-5 text-sm text-yellow-800 dark:text-yellow-200 space-y-2\">\n                                {backendResponse?.enhancement?.misalignments?.map((item, index) => (\n                                  <li key={index} className=\"mb-1\">{item}</li>\n                                ))}\n                              </ul>\n                            </div>\n                            <p className=\"text-xs text-gray-600 dark:text-gray-400 italic\">\n                              Alignment ensures that what you teach (learning outcomes) matches how you assess student learning.\n                            </p>\n                          </div>\n                        )}\n                      </CardContent>\n                    </Card>\n                  </TabsContent>\n                  \n                  <TabsContent value=\"suggestions\" className=\"space-y-4\">\n                    <Card>\n                      <CardHeader className=\"pb-2\">\n                        <h3 className=\"text-md font-semibold text-gray-800 dark:text-gray-200\">\n                          Improvement Suggestions\n                        </h3>\n                      </CardHeader>\n                      <CardContent className=\"p-4\">\n                        {backendResponse?.enhancement?.suggestions?.length === 0 ? (\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                            No suggestions provided.\n                          </p>\n                        ) : (\n                          <div className=\"space-y-3\">\n                            {backendResponse?.enhancement?.suggestions?.map((item, index) => (\n                              <div \n                                key={index} \n                                className=\"bg-white dark:bg-gray-800 p-4 rounded-lg border-l-4 border-blue-500 dark:border-blue-400 shadow-sm\"\n                              >\n                                <p className=\"text-sm text-gray-700 dark:text-gray-300\">{item}</p>\n                              </div>\n                            ))}\n                          </div>\n                        )}\n                      </CardContent>\n                    </Card>\n                    \n                    <Card className=\"border border-green-100 dark:border-green-900/30 bg-green-50/50 dark:bg-green-900/10\">\n                      <CardHeader className=\"pb-2 bg-green-100 dark:bg-green-900/30\">\n                        <h3 className=\"text-md font-semibold text-gray-800 dark:text-gray-200 flex items-center\">\n                          <Book className=\"w-4 h-4 mr-2 text-green-600 dark:text-green-400\" />\n                          Best Practices\n                        </h3>\n                      </CardHeader>\n                      <CardContent className=\"p-4\">\n                        <div className=\"space-y-4\">\n                          <p className=\"text-sm text-gray-700 dark:text-gray-300\">\n                            Consider these best practices when revising your syllabus:\n                          </p>\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                            <div className=\"bg-white dark:bg-gray-800 p-3 rounded-lg border border-green-200 dark:border-green-800\">\n                              <h4 className=\"font-medium text-sm mb-1 text-green-700 dark:text-green-300\">\n                                Use Action Verbs\n                              </h4>\n                              <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                                Begin learning outcomes with observable, measurable verbs (analyze, evaluate, create).\n                              </p>\n                            </div>\n                            <div className=\"bg-white dark:bg-gray-800 p-3 rounded-lg border border-green-200 dark:border-green-800\">\n                              <h4 className=\"font-medium text-sm mb-1 text-green-700 dark:text-green-300\">\n                                Balance Cognitive Levels\n                              </h4>\n                              <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                                Include outcomes across multiple levels of Bloom's taxonomy.\n                              </p>\n                            </div>\n                            <div className=\"bg-white dark:bg-gray-800 p-3 rounded-lg border border-green-200 dark:border-green-800\">\n                              <h4 className=\"font-medium text-sm mb-1 text-green-700 dark:text-green-300\">\n                                Ensure Measurability\n                              </h4>\n                              <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                                Make sure each outcome can be assessed through course activities.\n                              </p>\n                            </div>\n                            <div className=\"bg-white dark:bg-gray-800 p-3 rounded-lg border border-green-200 dark:border-green-800\">\n                              <h4 className=\"font-medium text-sm mb-1 text-green-700 dark:text-green-300\">\n                                Align With Assessments\n                              </h4>\n                              <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                                Create clear connections between outcomes and assessment methods.\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </TabsContent>\n                </Tabs>\n\n                <div className=\"flex flex-col md:flex-row space-y-4 md:space-y-0 md:space-x-4\">\n                  <Button\n                    onClick={handleDownload}\n                    className=\"bg-green-600 hover:bg-green-700 text-white text-lg py-4 rounded-xl shadow-md flex items-center justify-center space-x-2 flex-1\"\n                    aria-label=\"Download report as PDF\"\n                  >\n                    <Download className=\"w-5 h-5\" />\n                    <span>Download PDF Report</span>\n                  </Button>\n\n                  <Button\n                    onClick={handleReset}\n                    variant=\"outline\"\n                    className=\"border-red-500 text-red-500 hover:bg-red-100 dark:hover:bg-red-900 py-4 rounded-xl shadow-md flex items-center justify-center space-x-2 flex-1\"\n                    aria-label=\"Reset form\"\n                  >\n                    <RotateCw className=\"w-5 h-5\" />\n                    <span>Process Another Syllabus</span>\n                  </Button>\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n        \n        <div className=\"text-center text-gray-400 text-sm\">\n          © {new Date().getFullYear()} | Syllabus Enhancement Tool | Powered by AI\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardPage;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2981, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2992, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 2992, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}