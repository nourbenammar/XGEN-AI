{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/XGEN_AI/src/app/%28dashboard%29/alignment_evaluation/page.jsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport jsPDF from 'jspdf';\nimport { Upload, CheckCircle, Loader2, Download, RotateCw, AlertCircle, HelpCircle, FileText, ChevronDown, ChevronUp } from 'lucide-react';\n\n// Bloom's Taxonomy levels\nconst BLOOM_LEVELS = [\n  \"Knowledge\",\n  \"Comprehension\",\n  \"Application\",\n  \"Analysis\",\n  \"Synthesis\",\n  \"Evaluation\"\n];\n\n// Sample exam questions with their Bloom's taxonomy classifications\nconst SAMPLE_QUESTIONS = {\n  \"Express the expected regret at time t= 10 as a function of the pis.\": {\n    bloom: \"Comprehension\",\n    explanation: \"This question requires understanding the concept of expected regret and applying it to a specific scenario.\"\n  },\n  \"What is the probability of choosing arms 0, 1 or 2 at time 10?\": {\n    bloom: \"Application\",\n    explanation: \"The student must apply the ε-greedy algorithm to calculate specific probabilities.\"\n  },\n  \"What will UCB choose at time 10?\": {\n    bloom: \"Application\",\n    explanation: \"This question requires applying the UCB formula to determine a specific outcome.\"\n  },\n  \"What is limt→∞ Ni(t)/t? Use it to explain the fundamental difference between UCB and ε-greedy.\": {\n    bloom: \"Analysis\",\n    explanation: \"This question requires analyzing the limiting behavior of two algorithms and comparing their performance.\"\n  },\n  \"What are the reward R(s,a) and the transition probabilities P(s′|s,a) for s= 12?\": {\n    bloom: \"Application\",\n    explanation: \"The student must apply the MDP framework to determine specific values.\"\n  },\n  \"What is the corresponding Q-table, assuming that γ = 0.5?\": {\n    bloom: \"Application\",\n    explanation: \"The student must apply formulas to calculate Q-values.\"\n  },\n  \"You perform one iteration of value iteration. Write down the table of V1(s).\": {\n    bloom: \"Application\",\n    explanation: \"This requires applying the value iteration algorithm to compute specific values.\"\n  },\n  \"What is the optimal policy?\": {\n    bloom: \"Evaluation\",\n    explanation: \"The student must evaluate different policies to determine which is optimal.\"\n  },\n  \"Recall the Q-learning update equation, and use it to explain how does Q-learning work.\": {\n    bloom: \"Comprehension\",\n    explanation: \"This tests understanding of the Q-learning algorithm and ability to explain it.\"\n  },\n  \"Write down the value of the Q-table at the end of the episode.\": {\n    bloom: \"Application\",\n    explanation: \"The student must apply the Q-learning update formula to calculate values.\"\n  },\n  \"Explain how to design an algorithm that computes the optimal solution.\": {\n    bloom: \"Synthesis\",\n    explanation: \"This requires creating a new algorithm for the given problem.\"\n  },\n  \"If you do not know the probabilities, could you use a Q-learning approach? Explain how to do it.\": {\n    bloom: \"Synthesis\",\n    explanation: \"The student must create a Q-learning approach for this specific problem scenario.\"\n  }\n};\n\n// Function to analyze a question\nconst analyzeQuestion = (text) => {\n  const foundQuestion = Object.keys(SAMPLE_QUESTIONS).find(q => \n    text.toLowerCase().includes(q.toLowerCase()) ||\n    q.toLowerCase().includes(text.toLowerCase())\n  );\n  \n  if (foundQuestion) {\n    return {\n      bloom: SAMPLE_QUESTIONS[foundQuestion].bloom,\n      explanation: SAMPLE_QUESTIONS[foundQuestion].explanation\n    };\n  }\n  \n  // Simple keyword-based fallback analysis\n  const text_lower = text.toLowerCase();\n  if (text_lower.includes(\"what is\") || text_lower.includes(\"define\") || text_lower.includes(\"identify\")) {\n    return { bloom: \"Knowledge\", explanation: \"This question asks for basic recall of information.\" };\n  } else if (text_lower.includes(\"explain\") || text_lower.includes(\"describe\") || text_lower.includes(\"summarize\")) {\n    return { bloom: \"Comprehension\", explanation: \"This question requires understanding and explanation of concepts.\" };\n  } else if (text_lower.includes(\"apply\") || text_lower.includes(\"calculate\") || text_lower.includes(\"solve\")) {\n    return { bloom: \"Application\", explanation: \"This question requires applying knowledge to solve a problem.\" };\n  } else if (text_lower.includes(\"analyze\") || text_lower.includes(\"compare\") || text_lower.includes(\"contrast\")) {\n    return { bloom: \"Analysis\", explanation: \"This question requires breaking down information and making connections.\" };\n  } else if (text_lower.includes(\"design\") || text_lower.includes(\"create\") || text_lower.includes(\"develop\")) {\n    return { bloom: \"Synthesis\", explanation: \"This question requires creating something new from existing knowledge.\" };\n  } else if (text_lower.includes(\"evaluate\") || text_lower.includes(\"assess\") || text_lower.includes(\"judge\")) {\n    return { bloom: \"Evaluation\", explanation: \"This question requires making judgments based on criteria.\" };\n  } else {\n    return { bloom: \"Application\", explanation: \"This appears to be an application-level question requiring problem-solving.\" };\n  }\n};\n\n// Component definitions\nconst PreviewMessage = ({ message }) => {\n  return (\n    <div className={`p-4 rounded-lg w-full ${message.role === 'user' ? 'bg-blue-50 dark:bg-blue-900/30' : 'bg-gray-50 dark:bg-gray-900/30'}`}>\n      <div className=\"font-semibold text-gray-800 dark:text-gray-200\">{message.role === 'user' ? 'Question' : 'Analysis'}</div>\n      <div className=\"mt-1 text-gray-700 dark:text-gray-300\">{message.content}</div>\n      {message.bloom_level && (\n        <div className=\"mt-2 text-sm\">\n          <div className=\"font-semibold text-gray-800 dark:text-gray-200\">\n            Bloom's Taxonomy Level: <span className=\"font-bold text-blue-700 dark:text-blue-400\">{message.bloom_level}</span>\n          </div>\n          {message.explanation && (\n            <div className=\"mt-1 text-gray-700 dark:text-gray-300\">{message.explanation}</div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst BloomReport = ({ questions }) => {\n  const bloomCounts = {};\n  BLOOM_LEVELS.forEach(level => {\n    bloomCounts[level] = 0;\n  });\n  \n  questions.forEach(msg => {\n    if (msg.bloom_level) {\n      bloomCounts[msg.bloom_level] = (bloomCounts[msg.bloom_level] || 0) + 1;\n    }\n  });\n  \n  const totalAnalyzed = Object.values(bloomCounts).reduce((sum, count) => sum + count, 0);\n  \n  if (totalAnalyzed === 0) return null;\n  \n  return (\n    <div className=\"p-6 rounded-lg w-full bg-white dark:bg-gray-800 shadow-lg border border-gray-200 dark:border-gray-700\">\n      <h3 className=\"text-xl font-bold mb-4 text-gray-800 dark:text-gray-200\">Bloom's Taxonomy Analysis Report</h3>\n      <table className=\"min-w-full bg-white dark:bg-gray-800\">\n        <thead>\n          <tr>\n            <th className=\"py-2 px-4 border-b text-left text-gray-700 dark:text-gray-300\">Bloom's Level</th>\n            <th className=\"py-2 px-4 border-b text-left text-gray-700 dark:text-gray-300\">Count</th>\n            <th className=\"py-2 px-4 border-b text-left text-gray-700 dark:text-gray-300\">Percentage</th>\n          </tr>\n        </thead>\n        <tbody>\n          {BLOOM_LEVELS.map(level => (\n            <tr key={level}>\n              <td className=\"py-2 px-4 border-b text-gray-700 dark:text-gray-300\">{level}</td>\n              <td className=\"py-2 px-4 border-b text-gray-700 dark:text-gray-300\">{bloomCounts[level]}</td>\n              <td className=\"py-2 px-4 border-b text-gray-700 dark:text-gray-300\">\n                {totalAnalyzed > 0 ? `${((bloomCounts[level] / totalAnalyzed) * 100).toFixed(1)}%` : '0%'}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n        <tfoot>\n          <tr className=\"bg-gray-50 dark:bg-gray-900\">\n            <td className=\"py-2 px-4 border-b font-bold text-gray-800 dark:text-gray-200\">Total</td>\n            <td className=\"py-2 px-4 border-b font-bold text-gray-800 dark:text-gray-200\">{totalAnalyzed}</td>\n            <td className=\"py-2 px-4 border-b font-bold text-gray-800 dark:text-gray-200\">100%</td>\n          </tr>\n        </tfoot>\n      </table>\n      <div className=\"mt-4 text-sm text-gray-600 dark:text-gray-400\">\n        <p>This report shows the distribution of questions across Bloom's Taxonomy levels.</p>\n        <p>Higher-level thinking skills (Analysis, Synthesis, Evaluation) promote deeper learning.</p>\n      </div>\n    </div>\n  );\n};\n\n// Generate PDF report\nconst generateReportPDF = (messages, fileName) => {\n  const doc = new jsPDF();\n  const margin = 15;\n  const pageWidth = doc.internal.pageSize.getWidth();\n  const maxWidth = pageWidth - margin * 2;\n  let y = 20;\n\n  // Title\n  doc.setFontSize(22);\n  doc.setTextColor(0, 51, 102);\n  doc.setFont(\"helvetica\", \"bold\");\n  doc.text(\"Bloom's Taxonomy Analysis Report\", margin, y);\n  y += 10;\n\n  // Metadata\n  doc.setFontSize(12);\n  doc.setTextColor(80, 80, 80);\n  doc.setFont(\"helvetica\", \"normal\");\n  doc.text(`File: ${fileName || \"Unknown File\"}`, margin, y);\n  y += 7;\n  doc.text(`Date: ${new Date().toLocaleDateString()}`, margin, y);\n  y += 10;\n\n  // Divider\n  doc.setDrawColor(0, 51, 102);\n  doc.setLineWidth(0.5);\n  doc.line(margin, y, pageWidth - margin, y);\n  y += 10;\n\n  // Add text helper\n  const addText = (text, x, yPos, options = {}) => {\n    const { fontSize = 12, isBold = false, color = [0, 0, 0], isListItem = false } = options;\n    doc.setFontSize(fontSize);\n    doc.setFont(\"helvetica\", isBold ? \"bold\" : \"normal\");\n    doc.setTextColor(...color);\n\n    const splitText = doc.splitTextToSize(text, maxWidth - (isListItem ? 15 : 0));\n    let newYPos = yPos;\n\n    for (let i = 0; i < splitText.length; i++) {\n      if (newYPos > doc.internal.pageSize.getHeight() - 20) {\n        doc.addPage();\n        newYPos = 20;\n      }\n      doc.text(\n        (isListItem ? (i === 0 ? \"• \" : \"  \") : \"\") + splitText[i],\n        x + (isListItem && i > 0 ? 15 : 0),\n        newYPos\n      );\n      newYPos += 6;\n    }\n    return newYPos + 5;\n  };\n\n  // Summary\n  y = addText(\"Summary\", margin, y, { fontSize: 16, isBold: true, color: [0, 51, 102] });\n  const questionCount = messages.filter(m => m.role === 'user').length;\n  y = addText(\n    `Analyzed ${questionCount} questions from the uploaded exam. The report below details the Bloom's Taxonomy classification for each question.`,\n    margin, y\n  );\n  y += 5;\n\n  // Questions and Analysis\n  messages.forEach((msg, index) => {\n    if (msg.role === 'user') {\n      y = addText(`Question ${index / 2 + 1}:`, margin, y, { fontSize: 14, isBold: true });\n      y = addText(msg.content, margin + 5, y, { isListItem: true });\n    } else {\n      y = addText(\"Analysis:\", margin, y, { fontSize: 12, isBold: true });\n      y = addText(msg.content, margin + 5, y);\n      y = addText(`Bloom's Level: ${msg.bloom_level}`, margin + 5, y, { color: [0, 102, 204] });\n      y = addText(`Explanation: ${msg.explanation}`, margin + 5, y);\n      y += 5;\n    }\n  });\n\n  // Bloom's Distribution\n  const bloomCounts = {};\n  BLOOM_LEVELS.forEach(level => bloomCounts[level] = 0);\n  messages.filter(m => m.bloom_level).forEach(m => {\n    bloomCounts[m.bloom_level]++;\n  });\n  const totalAnalyzed = Object.values(bloomCounts).reduce((sum, count) => sum + count, 0);\n\n  y = addText(\"Bloom's Taxonomy Distribution\", margin, y, { fontSize: 16, isBold: true, color: [0, 51, 102] });\n  BLOOM_LEVELS.forEach(level => {\n    const percentage = totalAnalyzed > 0 ? ((bloomCounts[level] / totalAnalyzed) * 100).toFixed(1) : 0;\n    y = addText(\n      `${level}: ${bloomCounts[level]} questions (${percentage}%)`,\n      margin + 5, y,\n      { isListItem: true }\n    );\n  });\n\n  return doc;\n};\n\n// Main component\nconst AlignmentEvaluation = () => {\n  const [file, setFile] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [reportGenerated, setReportGenerated] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [error, setError] = useState(null);\n  const [showInstructions, setShowInstructions] = useState(false);\n  const [pdfjsLoaded, setPdfjsLoaded] = useState(false);\n\n  // Load pdf.js from CDN\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.9.359/pdf.min.js';\n    script.async = true;\n    script.onload = () => {\n      window.pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.9.359/pdf.worker.min.js';\n      setPdfjsLoaded(true);\n    };\n    script.onerror = () => {\n      console.error('Failed to load pdf.js');\n      setError('Failed to load PDF processing library.');\n      setPdfjsLoaded(false);\n    };\n    document.body.appendChild(script);\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, []);\n\n  // Handle file selection\n  const handleFileChange = (event) => {\n    const selectedFile = event.target.files?.[0];\n    if (selectedFile && selectedFile.type === \"application/pdf\") {\n      setFile(selectedFile);\n      setError(null);\n    } else {\n      setError(\"Please upload a valid PDF file.\");\n      setFile(null);\n    }\n  };\n\n  // Handle drag and drop\n  const handleDragOver = (event) => {\n    event.preventDefault();\n    setIsDragging(true);\n  };\n\n  const handleDragLeave = () => {\n    setIsDragging(false);\n  };\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n    setIsDragging(false);\n    const droppedFile = event.dataTransfer.files?.[0];\n    if (droppedFile && droppedFile.type === \"application/pdf\") {\n      setFile(droppedFile);\n      setError(null);\n    } else {\n      setError(\"Please drop a valid PDF file.\");\n      setFile(null);\n    }\n  };\n\n  // Handle analysis\n  const handleAnalyze = async (event) => {\n    event.preventDefault();\n    if (!file) {\n      setError(\"Please select a PDF file to analyze.\");\n      return;\n    }\n    if (!pdfjsLoaded) {\n      setError(\"PDF processing library not loaded. Please try again.\");\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const arrayBuffer = await file.arrayBuffer();\n      const pdf = await window.pdfjsLib.getDocument(arrayBuffer).promise;\n      let fullText = '';\n\n      // Extract text from all pages\n      for (let i = 1; i <= pdf.numPages; i++) {\n        const page = await pdf.getPage(i);\n        const textContent = await page.getTextContent();\n        const pageText = textContent.items.map(item => item.str).join(' ');\n        fullText += pageText + '\\n';\n      }\n\n      // Extract questions (simple heuristic: lines ending with '?')\n      const questions = fullText\n        .split('\\n')\n        .map(line => line.trim())\n        .filter(line => line.endsWith('?'));\n\n      // If no questions found, use sample questions\n      const finalQuestions = questions.length > 0 ? questions : Object.keys(SAMPLE_QUESTIONS);\n\n      // Analyze questions\n      const newMessages = [];\n      finalQuestions.forEach(q => {\n        const userMessage = { content: q, role: 'user', id: uuidv4() };\n        const analysis = analyzeQuestion(q);\n        const responseMessage = {\n          content: `This question aligns with the ${analysis.bloom} level of Bloom's Taxonomy.`,\n          role: 'assistant',\n          id: uuidv4(),\n          bloom_level: analysis.bloom,\n          explanation: analysis.explanation,\n        };\n        newMessages.push(userMessage, responseMessage);\n      });\n\n      setMessages(newMessages);\n      setReportGenerated(true);\n    } catch (error) {\n      console.error('PDF processing error:', error);\n      setError('Failed to process PDF. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle report download\n  const handleDownload = () => {\n    if (!reportGenerated || messages.length === 0) {\n      setError(\"No report available to download.\");\n      return;\n    }\n    try {\n      const pdf = generateReportPDF(messages, file?.name);\n      const fileName = file?.name\n        ? `bloom_analysis_${file.name.replace(/\\.[^/.]+$/, \"\")}.pdf`\n        : \"bloom_analysis_report.pdf\";\n      pdf.save(fileName);\n    } catch (error) {\n      console.error(\"Error generating PDF:\", error);\n      setError(\"Failed to download report. Please try again.\");\n    }\n  };\n\n  // Handle reset\n  const handleReset = () => {\n    if (window.confirm(\"Are you sure you want to reset? All current data will be lost.\")) {\n      setFile(null);\n      setMessages([]);\n      setReportGenerated(false);\n      setError(null);\n    }\n  };\n\n  return (\n    <div className=\"relative min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-blue-900 via-blue-800 to-blue-700 px-4\">\n      {/* Help Button */}\n      <button\n        onClick={() => setShowInstructions(!showInstructions)}\n        className=\"absolute top-4 right-4 bg-white/20 hover:bg-white/30 text-white rounded-full p-2\"\n        aria-label=\"Show instructions\"\n      >\n        <HelpCircle className=\"w-6 h-6\" />\n      </button>\n\n      {/* Instructions Modal */}\n      {showInstructions && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-70 z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl max-w-3xl max-h-[90vh] overflow-y-auto shadow-2xl\">\n            <div className=\"p-6\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h2 className=\"text-2xl font-bold text-blue-800 dark:text-blue-400\">How to Use the Exam Analysis Tool</h2>\n                <button\n                  onClick={() => setShowInstructions(false)}\n                  className=\"h-8 w-8 p-0 rounded-full text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                >\n                  <ChevronUp className=\"h-4 w-4\" />\n                </button>\n              </div>\n              <div className=\"space-y-6\">\n                <div className=\"space-y-2\">\n                  <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200 flex items-center\">\n                    <Upload className=\"mr-2 h-5 w-5 text-blue-700\" />\n                    Upload Your Exam\n                  </h3>\n                  <p className=\"text-gray-600 dark:text-gray-400\">\n                    Upload your exam document in PDF format. Click the upload area to browse or drag and drop your file.\n                  </p>\n                </div>\n                <div className=\"space-y-2\">\n                  <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200 flex items-center\">\n                    <Loader2 className=\"mr-2 h-5 w-5 text-blue-700\" />\n                    Analysis Process\n                  </h3>\n                  <p className=\"text-gray-600 dark:text-gray-400\">\n                    Click \"Analyze Exam\" to process the document. The system extracts questions and classifies them according to Bloom's Taxonomy levels.\n                  </p>\n                </div>\n                <div className=\"space-y-2\">\n                  <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200 flex items-center\">\n                    <FileText className=\"mr-2 h-5 w-5 text-blue-700\" />\n                    Understanding Your Results\n                  </h3>\n                  <p className=\"text-gray-600 dark:text-gray-400\">\n                    The analysis provides:\n                  </p>\n                  <ul className=\"list-disc pl-5 text-gray-600 dark:text-gray-400\">\n                    <li><strong>Question Classification</strong> - Each question is assigned a Bloom's Taxonomy level.</li>\n                    <li><strong>Explanations</strong> - Details why each question aligns with its level.</li>\n                    <li><strong>Distribution Report</strong> - Shows the spread of questions across Bloom's levels.</li>\n                  </ul>\n                </div>\n                <div className=\"space-y-2\">\n                  <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200 flex items-center\">\n                    <Download className=\"mr-2 h-5 w-5 text-blue-700\" />\n                    Using Your Report\n                  </h3>\n                  <p className=\"text-gray-600 dark:text-gray-400\">\n                    Download a PDF report with the full analysis. Use it to refine your exam questions to cover a range of cognitive skills.\n                  </p>\n                </div>\n                <div className=\"space-y-2\">\n                  <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200 flex items-center\">\n                    <CheckCircle className=\"mr-2 h-5 w-5 text-blue-700\" />\n                    Best Practices for Exams\n                  </h3>\n                  <ul className=\"list-disc pl-5 text-gray-600 dark:text-gray-400\">\n                    <li>Include questions across multiple Bloom's Taxonomy levels.</li>\n                    <li>Ensure questions align with learning objectives.</li>\n                    <li>Use clear, specific question phrasing.</li>\n                    <li>Balance lower and higher-order thinking skills.</li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"mt-6 pt-6 border-t border-gray-200 dark:border-gray-700\">\n                <button\n                  onClick={() => setShowInstructions(false)}\n                  className=\"w-full bg-blue-700 hover:bg-blue-800 text-white py-2 rounded-lg\"\n                >\n                  Close Instructions\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"relative z-10 w-full max-w-5xl flex flex-col items-center pt-2 pb-10 space-y-8\">\n        <div className=\"flex flex-col items-center space-y-2\">\n          <h1 className=\"text-5xl font-extrabold leading-tight text-white drop-shadow-lg text-center\">\n            <span className=\"text-white\">Exam</span> <span className=\"text-blue-300\">Analysis</span>\n          </h1>\n          <p className=\"text-white/80 text-xl text-center max-w-3xl\">\n            Upload your exam PDF for AI-powered Bloom's Taxonomy analysis and actionable insights\n          </p>\n        </div>\n\n        <div className=\"w-full bg-white/90 dark:bg-slate-900/90 backdrop-blur-md border border-gray-300 dark:border-gray-700 shadow-xl rounded-2xl\">\n          <div className=\"p-8\">\n            <div className=\"flex flex-col items-center space-y-1\">\n              <h2 className=\"text-center text-gray-800 dark:text-gray-200 text-2xl font-bold\">\n                Bloom's Taxonomy Analysis Tool\n              </h2>\n              <p className=\"text-center text-gray-600 dark:text-gray-400 text-sm\">\n                Upload your exam in PDF format for comprehensive Bloom's Taxonomy evaluation\n              </p>\n            </div>\n\n            <div className=\"p-8\">\n              {error && (\n                <div className=\"flex items-center space-x-2 p-4 mb-6 bg-red-100 dark:bg-red-900/30 rounded-lg border-l-4 border-red-500\">\n                  <AlertCircle className=\"w-5 h-5 text-red-500 flex-shrink-0\" />\n                  <p className=\"text-sm text-red-700 dark:text-red-300\">{error}</p>\n                </div>\n              )}\n\n              {!reportGenerated ? (\n                <form onSubmit={handleAnalyze} className=\"space-y-8\">\n                  <div\n                    className={`flex flex-col items-center justify-center w-full h-72 border-2 border-dashed rounded-xl cursor-pointer transition-colors duration-200 ${\n                      isDragging\n                        ? \"border-blue-400 bg-blue-100 dark:bg-blue-900/30\"\n                        : \"border-gray-300 dark:border-gray-600 hover:bg-gray-100 dark:hover:bg-slate-800\"\n                    }`}\n                    onDragOver={handleDragOver}\n                    onDragLeave={handleDragLeave}\n                    onDrop={handleDrop}\n                  >\n                    <label\n                      htmlFor=\"file-upload\"\n                      className=\"flex flex-col items-center justify-center w-full h-full\"\n                      aria-label=\"Upload exam file\"\n                    >\n                      <div className=\"flex flex-col items-center space-y-4\">\n                        {file ? (\n                          <div className=\"flex flex-col items-center\">\n                            <CheckCircle className=\"w-16 h-16 text-green-500\" />\n                            <div className=\"mt-4 px-4 py-2 bg-gray-100 dark:bg-gray-800 rounded-lg flex items-center\">\n                              <FileText className=\"w-5 h-5 mr-2 text-gray-500 dark:text-gray-400\" />\n                              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300 max-w-xs truncate\">\n                                {file.name}\n                              </span>\n                            </div>\n                          </div>\n                        ) : (\n                          <>\n                            <Upload className=\"w-16 h-16 text-blue-400 dark:text-blue-500\" />\n                            <div className=\"space-y-2 text-center\">\n                              <p className=\"text-lg font-medium text-gray-700 dark:text-gray-300\">\n                                Drop your exam PDF here or click to browse\n                              </p>\n                              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                                Supports PDF files only\n                              </p>\n                            </div>\n                          </>\n                        )}\n                      </div>\n                      <input\n                        id=\"file-upload\"\n                        type=\"file\"\n                        accept=\".pdf\"\n                        onChange={handleFileChange}\n                        className=\"hidden\"\n                        aria-describedby=\"file-upload-help\"\n                      />\n                      <span id=\"file-upload-help\" className=\"sr-only\">\n                        Upload a PDF file containing your exam\n                      </span>\n                    </label>\n                  </div>\n\n                  <button\n                    type=\"submit\"\n                    disabled={!file || isLoading || !pdfjsLoaded}\n                    className=\"w-full bg-blue-700 hover:bg-blue-800 text-white text-lg py-6 rounded-full shadow-2xl transition-transform transform hover:scale-105 uppercase flex items-center justify-center space-x-2 disabled:opacity-50\"\n                    aria-busy={isLoading}\n                  >\n                    {isLoading ? (\n                      <>\n                        <Loader2 className=\"w-5 h-5 animate-spin\" />\n                        <span>Analyzing Your Exam...</span>\n                      </>\n                    ) : (\n                      <span>Analyze Exam</span>\n                    )}\n                  </button>\n                </form>\n              ) : (\n                <div className=\"flex flex-col space-y-8\">\n                  <div className=\"bg-gray-50 dark:bg-gray-900 p-6 rounded-lg\">\n                    <div className=\"flex flex-col md:flex-row justify-between items-start mb-6 gap-4\">\n                      <div>\n                        <h2 className=\"text-2xl font-bold mb-2 text-gray-800 dark:text-gray-200\">\n                          Bloom's Taxonomy Analysis Report\n                        </h2>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                          <strong>File Processed:</strong> {file?.name || \"Unknown File\"}\n                        </p>\n                      </div>\n                      <div className=\"flex space-x-4\">\n                        <button\n                          onClick={handleDownload}\n                          className=\"bg-green-600 hover:bg-green-700 text-white rounded-lg shadow-md flex items-center space-x-2 px-4 py-2\"\n                          aria-label=\"Download report as PDF\"\n                        >\n                          <Download className=\"w-4 h-4\" />\n                          <span>Download PDF</span>\n                        </button>\n                        <button\n                          onClick={handleReset}\n                          className=\"border-blue-500 text-blue-500 hover:bg-blue-50 dark:hover:bg-blue-900/20 rounded-lg shadow-md flex items-center space-x-2 px-4 py-2\"\n                          aria-label=\"Reset form\"\n                        >\n                          <RotateCw className=\"w-4 h-4\" />\n                          <span>New Analysis</span>\n                        </button>\n                      </div>\n                    </div>\n\n                    <BloomReport questions={messages.filter(m => m.role === 'assistant')} />\n\n                    <div className=\"mt-8 space-y-4\">\n                      {messages.map((msg) => (\n                        <PreviewMessage key={msg.id} message={msg} />\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"flex space-x-4\">\n                    <button\n                      onClick={handleDownload}\n                      className=\"flex-1 bg-green-600 hover:bg-green-700 text-white text-lg py-4 rounded-xl shadow-md flex items-center justify-center space-x-2\"\n                      aria-label=\"Download report as PDF\"\n                    >\n                      <Download className=\"w-5 h-5\" />\n                      <span>Download PDF Report</span>\n                    </button>\n                    <button\n                      onClick={handleReset}\n                      className=\"flex-1 border-blue-500 text-blue-500 hover:bg-blue-100 dark:hover:bg-blue-900 py-4 rounded-xl shadow-md flex items-center justify-center space-x-2\"\n                      aria-label=\"Reset form\"\n                    >\n                      <RotateCw className=\"w-5 h-5\" />\n                      <span>Analyze Another Exam</span>\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AlignmentEvaluation;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1500, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}