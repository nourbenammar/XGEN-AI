{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/XGEN_AI/src/components/ui/card.jsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"rounded-lg border bg-card text-card-foreground shadow-sm\", className)}\n    {...props} />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props} />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-2xl font-semibold leading-none tracking-tight\", className)}\n    {...props} />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props} />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props} />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACtD,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4DAA4D;QACzE,GAAG,KAAK;;;;;;;AAEb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAEb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sDAAsD;QACnE,GAAG,KAAK;;;;;;;AAEb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACjE,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAEb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAEb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/XGEN_AI/src/app/%28dashboard%29/exam_generation/page.jsx"],"sourcesContent":["\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { useState } from \"react\";\nimport jsPDF from \"jspdf\";\n\nexport default function CreateExamPage() {\n  const [pdfFile, setPdfFile] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [examGenerated, setExamGenerated] = useState(false);\n\n  // Static Reinforcement Learning exam content (20 marks, 10 questions)\n  const staticExam = {\n    title: \"Reinforcement Learning - Final Exam\",\n    courseCode: \"RL501\",\n    date: \"June 20, 2025\",\n    duration: \"1.5 hours\",\n    totalMarks: 20,\n    instructions: [\n      \"Answer all questions clearly and concisely.\",\n      \"Show your work for partial credit where applicable.\",\n      \"Calculators are allowed; no internet-enabled devices.\",\n      \"Use the provided answer sheets for all responses.\"\n    ],\n    sections: [\n      {\n        title: \"Multiple Choice (8 marks)\",\n        questions: [\n          {\n            question: \"What is the primary goal of a reinforcement learning agent?\",\n            options: [\n              \"Minimize actions\",\n              \"Maximize cumulative reward\",\n              \"Minimize exploration\",\n              \"Maximize states\"\n            ],\n            marks: 2\n          },\n          {\n            question: \"What does Q-learning estimate?\",\n            options: [\n              \"State transitions\",\n              \"Action-value function\",\n              \"Reward function\",\n              \"Policy gradient\"\n            ],\n            marks: 2\n          },\n          {\n            question: \"Which method uses temporal difference learning?\",\n            options: [\n              \"Monte Carlo\",\n              \"Q-learning\",\n              \"Gradient Descent\",\n              \"Dynamic Programming\"\n            ],\n            marks: 2\n          },\n          {\n            question: \"What is an MDP?\",\n            options: [\n              \"Markov Decision Process\",\n              \"Multi-Decision Policy\",\n              \"Markov Data Process\",\n              \"Multi-Directional Path\"\n            ],\n            marks: 2\n          }\n        ]\n      },\n      {\n        title: \"Short Answer (8 marks)\",\n        questions: [\n          {\n            question: \"Define the exploration-exploitation tradeoff.\",\n            marks: 2\n          },\n          {\n            question: \"What is the role of the discount factor in RL?\",\n            marks: 2\n          },\n          {\n            question: \"Explain the term 'policy' in RL.\",\n            marks: 2\n          },\n          {\n            question: \"What is the difference between on-policy and off-policy learning?\",\n            marks: 2\n          }\n        ]\n      },\n      {\n        title: \"Problem Solving (4 marks)\",\n        questions: [\n          {\n            question: \"Write the Bellman equation for the value function in an MDP.\",\n            marks: 2\n          },\n          {\n            question: \"Outline a simple Q-learning update rule in pseudocode.\",\n            marks: 2\n          }\n        ]\n      }\n    ]\n  };\n\n  const handleFileChange = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      if (file.type === \"application/pdf\") {\n        setPdfFile(file);\n        setError(null);\n      } else {\n        setError(\"Please upload a valid PDF file.\");\n        setPdfFile(null);\n      }\n    }\n  };\n\n  const handleProcessPDF = async () => {\n    if (!pdfFile) {\n      setError(\"Please upload a PDF file first.\");\n      return;\n    }\n\n    setIsProcessing(true);\n    setError(null);\n\n    try {\n      // Basic validation (jsPDF is not used for reading, just ensure file is selected)\n      setExamGenerated(true); // Trigger exam display\n    } catch (err) {\n      setError(\"Error processing PDF: \" + err.message);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6 p-6\">\n\n      {/* Form */}\n      <div className=\"flex justify-center items-center min-h-screen bg-gray-50 p-8\">\n        <Card className=\"w-full max-w-4xl border shadow-md p-8\">\n          <CardHeader>\n            <CardTitle className=\"text-2xl font-bold text-red-700 mb-6 text-center\">\n              Create Exam from Syllabus\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-6\">\n            {/* PDF Upload */}\n            <div className=\"border-2 border-red-500 rounded-lg p-4 mb-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-1\">\n                  Upload Syllabus PDF\n                </label>\n                <input\n                  type=\"file\"\n                  accept=\"application/pdf\"\n                  className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-6 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-red-50 file:text-red-700 hover:file:bg-red-100\"\n                  onChange={handleFileChange}\n                />\n              </div>\n            </div>\n\n            {/* Process Button */}\n            <div className=\"pt-4\">\n              <Button\n                className=\"w-full py-3 bg-gradient-to-r from-red-600 to-red-400 hover:from-red-700 hover:to-red-500 text-white text-lg rounded-lg shadow-md\"\n                onClick={handleProcessPDF}\n                disabled={isProcessing || !pdfFile}\n              >\n                {isProcessing ? \"Processing PDF...\" : \"Process Syllabus\"}\n              </Button>\n            </div>\n\n            {/* Display Static Exam */}\n            {examGenerated && (\n              <div className=\"border-2 border-red-500 rounded-lg p-4 mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Generated Exam</h3>\n                <div className=\"space-y-4\">\n                  <h4 className=\"text-xl font-bold\">{staticExam.title}</h4>\n                  <p><strong>Course Code:</strong> {staticExam.courseCode}</p>\n                  <p><strong>Date:</strong> {staticExam.date}</p>\n                  <p><strong>Duration:</strong> {staticExam.duration}</p>\n                  <p><strong>Total Marks:</strong> {staticExam.totalMarks}</p>\n                  <div>\n                    <strong>Instructions:</strong>\n                    <ul className=\"list-disc pl-5\">\n                      {staticExam.instructions.map((instruction, index) => (\n                        <li key={index}>{instruction}</li>\n                      ))}\n                    </ul>\n                  </div>\n                  {staticExam.sections.map((section, sectionIndex) => (\n                    <div key={sectionIndex} className=\"mt-4\">\n                      <h5 className=\"text-lg font-semibold\">{section.title}</h5>\n                      {section.questions.map((question, qIndex) => (\n                        <div key={qIndex} className=\"mt-2\">\n                          <p><strong>Question {qIndex + 1} ({question.marks} marks):</strong> {question.question}</p>\n                          {question.options && (\n                            <ul className=\"list-disc pl-5\">\n                              {question.options.map((option, oIndex) => (\n                                <li key={oIndex}>{option}</li>\n                              ))}\n                            </ul>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Error Message */}\n            {error && (\n              <div className=\"text-red-500 text-sm\">{error}</div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 560, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}