{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/XGEN_AI/src/components/ui/card.jsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"rounded-lg border bg-card text-card-foreground shadow-sm\", className)}\n    {...props} />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props} />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-2xl font-semibold leading-none tracking-tight\", className)}\n    {...props} />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props} />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props} />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACtD,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4DAA4D;QACzE,GAAG,KAAK;;;;;;;AAEb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAEb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sDAAsD;QACnE,GAAG,KAAK;;;;;;;AAEb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACjE,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAEb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAEb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///Users/nourbenammar/Desktop/XGEN_AI/src/app/%28dashboard%29/alignemant_evaluation/page.jsx"],"sourcesContent":["\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { useState } from \"react\";\nimport jsPDF from \"jspdf\";\n\nexport default function CreateExamPage() {\n  const [pdfFile, setPdfFile] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [examGenerated, setExamGenerated] = useState(false);\n\n  // Static Reinforcement Learning exam content based on provided example\n  const staticExam = {\n    title: \"Reinforcement Learning - Final Exam\",\n    instructors: [\"Nicolas Gast\", \"Panayotis Mertikopoulos\"],\n    date: \"January 2026\",\n    academicYear: \"2025-2026\",\n    duration: \"2 hours\",\n    instructions: [\n      \"Please justify carefully your answers (try to be concise and precise).\",\n      \"The grading scale is given as an indication.\",\n      \"Use the provided answer sheets for all responses.\"\n    ],\n    sections: [\n      {\n        title: \"Exercise 1: Multi-Armed Bandit (6 points)\",\n        questions: [\n          {\n            question: \"Consider a 3-arm Gaussian bandit with means μ₁, μ₂, μ₃. You observe the following episode:\\n\" +\n                     \"Time: 0 1 2 3 4 5 6 7 8 9\\n\" +\n                     \"Choice: 0 1 2 0 1 2 0 1 2 0\\n\" +\n                     \"Reward: 1.2 0.8 0.5 1.1 0.9 0.4 1.3 0.7 0.6 1.0\\n\" +\n                     \"a) Express the expected regret at time t=10 as a function of the μᵢs.\\n\" +\n                     \"b) Using ε-greedy with ε=0.2, compute the probability of choosing each arm at time t=10.\\n\" +\n                     \"c) Using UCB with bonus 3 ln(t)/Nᵢ(t), where Nᵢ(t) is the number of times arm i was chosen before time t, determine the arm chosen at t=10 (ln(10) ≈ 2.3).\",\n            marks: 4,\n            learningOutcomes: {\n              outcomes: [\"LO1\", \"LO2\"],\n              bloomLevel: \"Understand, Apply\",\n              alignment: \"Aligned\",\n              explanation: \"This question assesses the understanding and application of multi-armed bandit algorithms, specifically ε-greedy and UCB, aligning with LO1 (understanding RL algorithms) and LO2 (applying bandit strategies).\"\n            }\n          },\n          {\n            question: \"For the ε-greedy and UCB policies above, compute limₜ→∞ Nᵢ(t)/t for each arm i. Explain how this reflects the regret performance difference between the two policies.\",\n            marks: 2,\n            learningOutcomes: {\n              outcomes: [\"LO1\", \"LO3\"],\n              bloomLevel: \"Analyze\",\n              alignment: \"Aligned\",\n              explanation: \"This question requires analyzing the long-term behavior of bandit algorithms and their impact on regret, aligning with LO1 (RL algorithm understanding) and LO3 (regret analysis).\"\n            }\n          }\n        ]\n      },\n      {\n        title: \"Exercise 2: Simplified Blackjack (14 points)\",\n        questions: [\n          {\n            question: \"Consider a simplified Blackjack game with an infinite deck (cards 2-10, J, Q, K, A, each equally likely). Card values: 2-10 as shown, J/Q/K=10, A=11. Actions: 'hit' (draw card, no reward) or 'stay' (sum cards, earn 10 if sum is 16-21, 0 if sum=15, -10 if sum<15 or >21). Model as an MDP with states S={0,2,...,21,≥21,end}, discount factor γ=0.5.\\n\" +\n                     \"a) For state s=14, actions a∈{hit,stay}, compute rewards R(s,a) and transition probabilities P(s'|s,a) for s'∈S.\",\n            marks: 2,\n            learningOutcomes: {\n              outcomes: [\"LO2\", \"LO4\"],\n              bloomLevel: \"Apply\",\n              alignment: \"Aligned\",\n              explanation: \"This question tests the ability to model a problem as an MDP, aligning with LO2 (MDP modeling) and LO4 (probability calculations in RL).\"\n            }\n          },\n          {\n            question: \"Given an initial value function V₀(s) for s∈{12,...,21,≥21,end} (values: 12=2, 13=1, ..., 21=0, ≥21=-1, end=0):\\n\" +\n                     \"a) Compute the Q-table for γ=0.5.\\n\" +\n                     \"b) Perform one iteration of value iteration to compute V₁(s).\\n\" +\n                     \"c) Determine the optimal policy and justify.\",\n            marks: 4,\n            learningOutcomes: {\n              outcomes: [\"LO2\", \"LO5\"],\n              bloomLevel: \"Apply, Evaluate\",\n              alignment: \"Aligned\",\n              explanation: \"This question involves applying value iteration and evaluating optimal policies, aligning with LO2 (MDP solutions) and LO5 (policy optimization).\"\n            }\n          },\n          {\n            question: \"Using Q-learning with learning rate α=0.2, γ=0.5, and unknown transition probabilities:\\n\" +\n                     \"a) Write the Q-learning update equation and explain its mechanics.\\n\" +\n                     \"b) Given a Q-table and episode (s=14, a=hit, r=0, s'=20; s'=20, a=stay, r=10, s'=end), update the Q-table, showing only changed values.\",\n            marks: 4,\n            learningOutcomes: {\n              outcomes: [\"LO1\", \"LO3\"],\n              bloomLevel: \"Understand, Apply\",\n              alignment: \"Aligned\",\n              explanation: \"This question assesses understanding and application of Q-learning, aligning with LO1 (RL algorithms) and LO3 (model-free learning).\"\n            }\n          },\n          {\n            question: \"Modify the Blackjack game to include a dealer who draws cards after the player stays. The dealer wins (+10) if their score is strictly higher than the player's, losing otherwise (player gets +10 if sum≤21, -10 if >21).\\n\" +\n                     \"a) Describe an algorithm to compute the optimal policy assuming known card probabilities.\\n\" +\n                     \"b) Explain how to apply Q-learning if probabilities are unknown.\",\n            marks: 4,\n            learningOutcomes: {\n              outcomes: [\"LO3\", \"LO5\"],\n              bloomLevel: \"Analyze, Create\",\n              alignment: \"Aligned\",\n              explanation: \"This question requires designing and analyzing RL solutions for a two-player game, aligning with LO3 (model-free RL) and LO5 (policy design).\"\n            }\n          }\n        ]\n      }\n    ]\n  };\n\n  const generatePDF = () => {\n    const doc = new jsPDF();\n    doc.setFontSize(16);\n    doc.text(staticExam.title, 20, 20);\n    doc.setFontSize(12);\n    doc.text(`Instructors: ${staticExam.instructors.join(\", \")}`, 20, 30);\n    doc.text(`Date: ${staticExam.date} (${staticExam.academicYear})`, 20, 40);\n    doc.text(`Duration: ${staticExam.duration}`, 20, 50);\n    \n    let y = 60;\n    doc.setFontSize(12);\n    doc.text(\"Instructions:\", 20, y);\n    y += 10;\n    staticExam.instructions.forEach((instruction, index) => {\n      doc.text(`- ${instruction}`, 25, y);\n      y += 10;\n    });\n\n    staticExam.sections.forEach((section, sectionIndex) => {\n      y += 10;\n      doc.setFontSize(14);\n      doc.text(section.title, 20, y);\n      y += 10;\n      section.questions.forEach((question, qIndex) => {\n        doc.setFontSize(12);\n        const questionText = `Question ${qIndex + 1} (${question.marks} points): ${question.question}`;\n        const lines = doc.splitTextToSize(questionText, 170);\n        lines.forEach(line => {\n          doc.text(line, 25, y);\n          y += 7;\n        });\n        y += 5;\n        doc.setFontSize(10);\n        doc.text(`Learning Outcomes: ${question.learningOutcomes.outcomes.join(\", \")}`, 30, y);\n        doc.text(`Bloom Level: ${question.learningOutcomes.bloomLevel}`, 30, y + 5);\n        doc.text(`Alignment: ${question.learningOutcomes.alignment}`, 30, y + 10);\n        const explanationLines = doc.splitTextToSize(`Explanation: ${question.learningOutcomes.explanation}`, 160);\n        explanationLines.forEach(line => {\n          doc.text(line, 30, y + 15);\n          y += 5;\n        });\n        y += 10;\n      });\n    });\n\n    doc.save(\"Reinforcement_Learning_Exam.pdf\");\n  };\n\n  const handleFileChange = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      if (file.type === \"application/pdf\") {\n        setPdfFile(file);\n        setError(null);\n      } else {\n        setError(\"Please upload a valid PDF file.\");\n        setPdfFile(null);\n      }\n    }\n  };\n\n  const handleProcessPDF = async () => {\n    if (!pdfFile) {\n      setError(\"Please upload a PDF file first.\");\n      return;\n    }\n\n    setIsProcessing(true);\n    setError(null);\n\n    try {\n      setExamGenerated(true);\n    } catch (err) {\n      setError(\"Error processing PDF: \" + err.message);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      <div className=\"flex justify-center items-center min-h-screen bg-gray-50 p-8\">\n        <Card className=\"w-full max-w-4xl border shadow-md p-8\">\n          <CardHeader>\n            <CardTitle className=\"text-2xl font-bold text-red-700 mb-6 text-center\">\n              Evaluate Exam with Bloom's Taxonomy\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-6\">\n            <div className=\"border-2 border-red-500 rounded-lg p-4 mb-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-1\">\n                  Upload Syllabus PDF\n                </label>\n                <input\n                  type=\"file\"\n                  accept=\"application/pdf\"\n                  className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-6 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-red-50 file:text-red-700 hover:file:bg-red-100\"\n                  onChange={handleFileChange}\n                />\n              </div>\n            </div>\n\n            <div className=\"pt-4\">\n              <Button\n                className=\"w-full py-3 bg-gradient-to-r from-red-600 to-red-400 hover:from-red-700 hover:to-red-500 text-white text-lg rounded-lg shadow-md\"\n                onClick={handleProcessPDF}\n                disabled={isProcessing || !pdfFile}\n              >\n                {isProcessing ? \"Processing PDF...\" : \"Process Syllabus\"}\n              </Button>\n            </div>\n\n            {examGenerated && (\n              <div className=\"border-2 border-red-500 rounded-lg p-4 mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Generated Exam</h3>\n                <Button\n                  className=\"mb-4 bg-red-600 hover:bg-red-700 text-white\"\n                  onClick={generatePDF}\n                >\n                  Download Exam PDF\n                </Button>\n                <div className=\"space-y-4\">\n                  <h4 className=\"text-xl font-bold\">{staticExam.title}</h4>\n                  <p><strong>Instructors:</strong> {staticExam.instructors.join(\", \")}</p>\n                  <p><strong>Date:</strong> {staticExam.date} ({staticExam.academicYear})</p>\n                  <p><strong>Duration:</strong> {staticExam.duration}</p>\n                  <div>\n                    <strong>Instructions:</strong>\n                    <ul className=\"list-disc pl-5\">\n                      {staticExam.instructions.map((instruction, index) => (\n                        <li key={index}>{instruction}</li>\n                      ))}\n                    </ul>\n                  </div>\n                  {staticExam.sections.map((section, sectionIndex) => (\n                    <div key={sectionIndex} className=\"mt-4\">\n                      <h5 className=\"text-lg font-semibold\">{section.title}</h5>\n                      {section.questions.map((question, qIndex) => (\n                        <div key={qIndex} className=\"mt-2\">\n                          <p><strong>Question {qIndex + 1} ({question.marks} points):</strong> {question.question}</p>\n                          <div className=\"ml-4 mt-2\">\n                            <p><strong>Learning Outcomes:</strong> {question.learningOutcomes.outcomes.join(\", \")}</p>\n                            <p><strong>Bloom Level:</strong> {question.learningOutcomes.bloomLevel}</p>\n                            <p><strong>Alignment:</strong> {question.learningOutcomes.alignment}</p>\n                            <p><strong>Explanation:</strong> {question.learningOutcomes.explanation}</p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {error && (\n              <div className=\"text-red-500 text-sm\">{error}</div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAOe,SAAS;;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,uEAAuE;IACvE,MAAM,aAAa;QACjB,OAAO;QACP,aAAa;YAAC;YAAgB;SAA0B;QACxD,MAAM;QACN,cAAc;QACd,UAAU;QACV,cAAc;YACZ;YACA;YACA;SACD;QACD,UAAU;YACR;gBACE,OAAO;gBACP,WAAW;oBACT;wBACE,UAAU,iGACD,gCACA,kCACA,sDACA,4EACA,+FACA;wBACT,OAAO;wBACP,kBAAkB;4BAChB,UAAU;gCAAC;gCAAO;6BAAM;4BACxB,YAAY;4BACZ,WAAW;4BACX,aAAa;wBACf;oBACF;oBACA;wBACE,UAAU;wBACV,OAAO;wBACP,kBAAkB;4BAChB,UAAU;gCAAC;gCAAO;6BAAM;4BACxB,YAAY;4BACZ,WAAW;4BACX,aAAa;wBACf;oBACF;iBACD;YACH;YACA;gBACE,OAAO;gBACP,WAAW;oBACT;wBACE,UAAU,gWACD;wBACT,OAAO;wBACP,kBAAkB;4BAChB,UAAU;gCAAC;gCAAO;6BAAM;4BACxB,YAAY;4BACZ,WAAW;4BACX,aAAa;wBACf;oBACF;oBACA;wBACE,UAAU,sHACD,wCACA,oEACA;wBACT,OAAO;wBACP,kBAAkB;4BAChB,UAAU;gCAAC;gCAAO;6BAAM;4BACxB,YAAY;4BACZ,WAAW;4BACX,aAAa;wBACf;oBACF;oBACA;wBACE,UAAU,8FACD,yEACA;wBACT,OAAO;wBACP,kBAAkB;4BAChB,UAAU;gCAAC;gCAAO;6BAAM;4BACxB,YAAY;4BACZ,WAAW;4BACX,aAAa;wBACf;oBACF;oBACA;wBACE,UAAU,iOACD,gGACA;wBACT,OAAO;wBACP,kBAAkB;4BAChB,UAAU;gCAAC;gCAAO;6BAAM;4BACxB,YAAY;4BACZ,WAAW;4BACX,aAAa;wBACf;oBACF;iBACD;YACH;SACD;IACH;IAEA,MAAM,cAAc;QAClB,MAAM,MAAM,IAAI,sJAAA,CAAA,UAAK;QACrB,IAAI,WAAW,CAAC;QAChB,IAAI,IAAI,CAAC,WAAW,KAAK,EAAE,IAAI;QAC/B,IAAI,WAAW,CAAC;QAChB,IAAI,IAAI,CAAC,CAAC,aAAa,EAAE,WAAW,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI;QAClE,IAAI,IAAI,CAAC,CAAC,MAAM,EAAE,WAAW,IAAI,CAAC,EAAE,EAAE,WAAW,YAAY,CAAC,CAAC,CAAC,EAAE,IAAI;QACtE,IAAI,IAAI,CAAC,CAAC,UAAU,EAAE,WAAW,QAAQ,EAAE,EAAE,IAAI;QAEjD,IAAI,IAAI;QACR,IAAI,WAAW,CAAC;QAChB,IAAI,IAAI,CAAC,iBAAiB,IAAI;QAC9B,KAAK;QACL,WAAW,YAAY,CAAC,OAAO,CAAC,CAAC,aAAa;YAC5C,IAAI,IAAI,CAAC,CAAC,EAAE,EAAE,aAAa,EAAE,IAAI;YACjC,KAAK;QACP;QAEA,WAAW,QAAQ,CAAC,OAAO,CAAC,CAAC,SAAS;YACpC,KAAK;YACL,IAAI,WAAW,CAAC;YAChB,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,IAAI;YAC5B,KAAK;YACL,QAAQ,SAAS,CAAC,OAAO,CAAC,CAAC,UAAU;gBACnC,IAAI,WAAW,CAAC;gBAChB,MAAM,eAAe,CAAC,SAAS,EAAE,SAAS,EAAE,EAAE,EAAE,SAAS,KAAK,CAAC,UAAU,EAAE,SAAS,QAAQ,EAAE;gBAC9F,MAAM,QAAQ,IAAI,eAAe,CAAC,cAAc;gBAChD,MAAM,OAAO,CAAC,CAAA;oBACZ,IAAI,IAAI,CAAC,MAAM,IAAI;oBACnB,KAAK;gBACP;gBACA,KAAK;gBACL,IAAI,WAAW,CAAC;gBAChB,IAAI,IAAI,CAAC,CAAC,mBAAmB,EAAE,SAAS,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI;gBACpF,IAAI,IAAI,CAAC,CAAC,aAAa,EAAE,SAAS,gBAAgB,CAAC,UAAU,EAAE,EAAE,IAAI,IAAI;gBACzE,IAAI,IAAI,CAAC,CAAC,WAAW,EAAE,SAAS,gBAAgB,CAAC,SAAS,EAAE,EAAE,IAAI,IAAI;gBACtE,MAAM,mBAAmB,IAAI,eAAe,CAAC,CAAC,aAAa,EAAE,SAAS,gBAAgB,CAAC,WAAW,EAAE,EAAE;gBACtG,iBAAiB,OAAO,CAAC,CAAA;oBACvB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI;oBACvB,KAAK;gBACP;gBACA,KAAK;YACP;QACF;QAEA,IAAI,IAAI,CAAC;IACX;IAEA,MAAM,mBAAmB,CAAC;QACxB,IAAI,MAAM,MAAM,CAAC,KAAK,IAAI,MAAM,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE;YAC/C,MAAM,OAAO,MAAM,MAAM,CAAC,KAAK,CAAC,EAAE;YAClC,IAAI,KAAK,IAAI,KAAK,mBAAmB;gBACnC,WAAW;gBACX,SAAS;YACX,OAAO;gBACL,SAAS;gBACT,WAAW;YACb;QACF;IACF;IAEA,MAAM,mBAAmB;QACvB,IAAI,CAAC,SAAS;YACZ,SAAS;YACT;QACF;QAEA,gBAAgB;QAChB,SAAS;QAET,IAAI;YACF,iBAAiB;QACnB,EAAE,OAAO,KAAK;YACZ,SAAS,2BAA2B,IAAI,OAAO;QACjD,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,6LAAC,mIAAA,CAAA,aAAU;kCACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;4BAAC,WAAU;sCAAmD;;;;;;;;;;;kCAI1E,6LAAC,mIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAAiD;;;;;;sDAGlE,6LAAC;4CACC,MAAK;4CACL,QAAO;4CACP,WAAU;4CACV,UAAU;;;;;;;;;;;;;;;;;0CAKhB,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,qIAAA,CAAA,SAAM;oCACL,WAAU;oCACV,SAAS;oCACT,UAAU,gBAAgB,CAAC;8CAE1B,eAAe,sBAAsB;;;;;;;;;;;4BAIzC,+BACC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAA2C;;;;;;kDACzD,6LAAC,qIAAA,CAAA,SAAM;wCACL,WAAU;wCACV,SAAS;kDACV;;;;;;kDAGD,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAG,WAAU;0DAAqB,WAAW,KAAK;;;;;;0DACnD,6LAAC;;kEAAE,6LAAC;kEAAO;;;;;;oDAAqB;oDAAE,WAAW,WAAW,CAAC,IAAI,CAAC;;;;;;;0DAC9D,6LAAC;;kEAAE,6LAAC;kEAAO;;;;;;oDAAc;oDAAE,WAAW,IAAI;oDAAC;oDAAG,WAAW,YAAY;oDAAC;;;;;;;0DACtE,6LAAC;;kEAAE,6LAAC;kEAAO;;;;;;oDAAkB;oDAAE,WAAW,QAAQ;;;;;;;0DAClD,6LAAC;;kEACC,6LAAC;kEAAO;;;;;;kEACR,6LAAC;wDAAG,WAAU;kEACX,WAAW,YAAY,CAAC,GAAG,CAAC,CAAC,aAAa,sBACzC,6LAAC;0EAAgB;+DAAR;;;;;;;;;;;;;;;;4CAId,WAAW,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,6BACjC,6LAAC;oDAAuB,WAAU;;sEAChC,6LAAC;4DAAG,WAAU;sEAAyB,QAAQ,KAAK;;;;;;wDACnD,QAAQ,SAAS,CAAC,GAAG,CAAC,CAAC,UAAU,uBAChC,6LAAC;gEAAiB,WAAU;;kFAC1B,6LAAC;;0FAAE,6LAAC;;oFAAO;oFAAU,SAAS;oFAAE;oFAAG,SAAS,KAAK;oFAAC;;;;;;;4EAAkB;4EAAE,SAAS,QAAQ;;;;;;;kFACvF,6LAAC;wEAAI,WAAU;;0FACb,6LAAC;;kGAAE,6LAAC;kGAAO;;;;;;oFAA2B;oFAAE,SAAS,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC;;;;;;;0FAChF,6LAAC;;kGAAE,6LAAC;kGAAO;;;;;;oFAAqB;oFAAE,SAAS,gBAAgB,CAAC,UAAU;;;;;;;0FACtE,6LAAC;;kGAAE,6LAAC;kGAAO;;;;;;oFAAmB;oFAAE,SAAS,gBAAgB,CAAC,SAAS;;;;;;;0FACnE,6LAAC;;kGAAE,6LAAC;kGAAO;;;;;;oFAAqB;oFAAE,SAAS,gBAAgB,CAAC,WAAW;;;;;;;;;;;;;;+DANjE;;;;;;mDAHJ;;;;;;;;;;;;;;;;;4BAmBjB,uBACC,6LAAC;gCAAI,WAAU;0CAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOrD;GA7QwB;KAAA"}},
    {"offset": {"line": 672, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}